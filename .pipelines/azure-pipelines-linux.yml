# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# ADO link: https://msazure.visualstudio.com/One/_apps/hub/ms.vss-build-web.ci-designer-hub?pipelineId=297462&branch=main

trigger:
  none
    
pr: none

resources:
  containers:
  - container: pmc-cli
    image: 'mcr.microsoft.com/pmc/pmc-cli:latest'
    options: --entrypoint=""

variables:
  VcVersion : 1.0.0
  ROOT: $(Build.SourcesDirectory)
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  ENABLE_PRS_DELAYSIGN: 1
  PMC_CLI_AUTH_TYPE: 'wif'
  PMC_CLI_CLIENT_ID: 'cc6b4c30-84b7-457a-b280-79683f2dff33'

stages:
- stage: BuildPackage
  jobs:
  - job: BuildPackage
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: UseDotNet@2
      continueOnError: false
      inputs:
        packageType: 'sdk'
        version: '2.1.x'
    
    - task: UseDotNet@2
      continueOnError: false
      inputs:
        packageType: 'sdk'
        version: '6.x'

    - task: UseDotNet@2
      continueOnError: false
      inputs:
        packageType: 'sdk'
        version: '8.x'
        useGlobalJson: false
        performMultiLevelLookup: true
        workingDirectory: '$(Build.SourcesDirectory)'

    - script: |
        # Read the content of VERSION
        version=$(cat $(Build.SourcesDirectory)/VERSION)

        # Set the file content as a pipeline variable
        echo "##vso[task.setvariable variable=VcVersion]$version"
      displayName: 'Set VC Version'

    - script: chmod -R +x $(Build.SourcesDirectory)
      displayName: 'Allow scripts to be executable on Linux'

      # Ensure the artifact output/bin/obj directories are clean.
      # - script: $(Build.SourcesDirectory)/clean.cmd
      # displayName: 'Clean Output Directories'
      
      # Build the repo.
    - script: $(Build.SourcesDirectory)/build.sh $(VcVersion) --build-all
      displayName: 'Build Solutions'

    - script: $(Build.SourcesDirectory)/src/VirtualClient/VirtualClient.Packaging/build-rpm-linux-arm64.sh $(VcVersion)
      displayName: 'Build rpm package for linux arm64'

    - script: $(Build.SourcesDirectory)/src/VirtualClient/VirtualClient.Packaging/build-rpm-linux-x64.sh $(VcVersion)
      displayName: 'Build rpm package for linux x64'

    - script: $(Build.SourcesDirectory)/src/VirtualClient/VirtualClient.Packaging/build-deb-linux-arm64.sh $(VcVersion)
      displayName: 'Build deb package for linux arm64'

    - script: $(Build.SourcesDirectory)/src/VirtualClient/VirtualClient.Packaging/build-deb-linux-x64.sh $(VcVersion)
      displayName: 'Build deb package for linux x64'

      
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/out/packages'
        flattenFolders: true
        Contents: |
          *.deb
          **/RPMS/**/*.rpm
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: EsrpCodeSigning@5
      inputs:
        ConnectedServiceName: 'virtualclient-esrp-ame'
        AppRegistrationClientId: '0225fe5c-2a99-4459-af16-27a7dcd1c14a'
        AppRegistrationTenantId: '33e01921-4d64-4f8c-a055-5bdaffd5e33d'
        AuthAKVName: 'virtualclient-vault-esrp'
        AuthCertName: 'virtualclient-esrp-cert-auth'
        AuthSignCertName: 'virtualclient-esrp-cert-sign'
        FolderPath: '$(Build.ArtifactStagingDirectory)'
        Pattern: '*.deb,*.rpm'
        signConfigType: 'inlineSignParams'
        inlineOperation: |
          [
              {
                  "KeyCode" : "CP-450779-Pgp",
                  "OperationCode" : "LinuxSign",
                  "Parameters" : {},
                  "ToolName" : "sign",
                  "ToolVersion" : "1.0"
              }
          ]
        SessionTimeout: '60'
        MaxConcurrency: '50'
        MaxRetryAttempts: '5'
        
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: drop

  - job: PublishRpmPackage
    timeoutInMinutes: 180
    dependsOn: BuildPackage
    pool:
      vmImage: 'ubuntu-latest'
    container: pmc-cli

    steps:
    - task: AzureCLI@2
      inputs:
        addSpnToEnvironment: true
        azureSubscription: 'virtualclient-esrp-ame'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
            pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" repo list --limit 1
            # --base-url "https://tux-ingest.corp.trafficmanager.net/api/v4" if tux-dev

    - task: AzureCLI@2
      inputs:
        addSpnToEnvironment: true
        azureSubscription: 'virtualclient-esrp-ame'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
            echo "##vso[task.setvariable variable=idToken;issecret=true]$idToken"
            echo "##vso[task.setvariable variable=tenantId]$tenantId"
            echo "##vso[task.setvariable variable=servicePrincipalId]$servicePrincipalId"

    - download: current
      artifact: drop

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Agent.BuildDirectory)/drop/'
        Contents: '*.rpm'
        TargetFolder: '$(Agent.BuildDirectory)/drop/rpmpackages'

    - task: AzureKeyVault@2
      inputs:
        ConnectedServiceName: 'virtualclient-esrp-ame'
        KeyVaultName: 'virtualclient-vault'
        SecretsFilter: 'virtualclient-crc-principal'
        RunAsPreJob: true
        
    # Amazon Linux
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Amazon Linux 2023 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-amazonlinux2023-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Amazon Linux 2 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-amazonlinux2-prod-yum'


    # AzLinux
    - task: PublishLinuxPackagesPMC@0
      displayName: 'AzLinux 3.0 rpm publish x64'
      enabled: false
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'azurelinux-3.0-prod-base-x86_64-yum'
    - task: PublishLinuxPackagesPMC@0
      displayName: 'AzLinux 3.0 rpm publish aarch64'
      enabled: false
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'azurelinux-3.0-prod-base-aarch64-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Mariner 2.0 rpm publish x64'
      enabled: false
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'cbl-mariner-2.0-prod-Microsoft-x86_64-yum'
      
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Mariner 2.0 rpm publish aarch64'
      enabled: false
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'cbl-mariner-2.0-prod-Microsoft-aarch64-yum'
    
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Mariner 1.0 rpm publish'
      enabled: false
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'cbl-mariner-1.0-prod-Microsoft-aarch64-rpms-yum'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Mariner 1.0 rpm publish'
      enabled: false
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'cbl-mariner-1.0-prod-Microsoft-x86_64-rpms-yum'

    # Centos
    - task: PublishLinuxPackagesPMC@0
      displayName: 'CentOS 7 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-centos7-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'CentOS 6 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-centos6-prod-yum'

    # Fedora
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Fedora 39 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-fedora39-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Fedora 38 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-fedora38-prod-yum'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Fedora 37 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-fedora37-prod-yum'
   
    # OpenSUSE
    - task: PublishLinuxPackagesPMC@0
      displayName: 'OpenSUSE 15 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-opensuse15-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'OpenSUSE 42.2 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-opensuse42.2-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'OpenSUSE 42.3 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-opensuse42.3-prod-yum'

    # RedHat
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 9.0 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel9.0-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 8.2 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel8.2-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 8.1 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel8.1-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 8.0 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel8.0-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 7.9 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel7.9-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 7.8 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel7.8-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 7.5 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel7.5-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 7.4 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel7.4-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 7.3 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel7.3-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 7.2 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel7.2-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 7.1 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel7.1-prod-yum'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Red Hat 6.9 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-rhel6.9-prod-yum'


    # SUSE Linux Enterprise Server
    - task: PublishLinuxPackagesPMC@0
      displayName: 'SLES 15 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-sles15-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'SLES 12 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-sles12-prod-yum'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'SLES 11 rpm publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/rpmpackages'
        repository: 'microsoft-sles11-prod-yum'


  - job: PublishDebPackage
    timeoutInMinutes: 180
    dependsOn: BuildPackage
    pool:
      vmImage: 'ubuntu-latest'
    container: pmc-cli

    steps:
    - task: AzureCLI@2
      inputs:
        addSpnToEnvironment: true
        azureSubscription: 'virtualclient-esrp-ame'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
            pmc --base-url "https://pmc-ingest.trafficmanager.net/api/v4" repo list --limit 1
            # --base-url "https://tux-ingest.corp.trafficmanager.net/api/v4" if tux-dev

    - task: AzureCLI@2
      inputs:
        addSpnToEnvironment: true
        azureSubscription: 'virtualclient-esrp-ame'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
            echo "##vso[task.setvariable variable=idToken;issecret=true]$idToken"
            echo "##vso[task.setvariable variable=tenantId]$tenantId"
            echo "##vso[task.setvariable variable=servicePrincipalId]$servicePrincipalId"

    - download: current
      artifact: drop
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Agent.BuildDirectory)/drop/'
        Contents: '*.deb'
        TargetFolder: '$(Agent.BuildDirectory)/drop/packages'

    - task: AzureKeyVault@2
      inputs:
        ConnectedServiceName: 'virtualclient-esrp-ame'
        KeyVaultName: 'virtualclient-vault'
        SecretsFilter: 'virtualclient-crc-principal'
        RunAsPreJob: true
        
    # Debian
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Debian 12.0 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-debian-bookworm-prod-apt'
        release: 'bookworm'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Debian 11.0 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-debian-bullseye-prod-apt'
        release: 'bullseye'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Debian 10.0 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-debian-buster-prod-apt'
        release: 'buster'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Debian 8.0 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-debian-jessie-prod-apt'
        release: 'jessie'      

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Debian 9.0 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-debian-stretch-prod-apt'
        release: 'stretch'    
        
    # Ubuntu
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 17.10 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-artful-prod-apt'
        release: 'artful'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 18.04 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-bionic-prod-apt'
        release: 'bionic'

    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 18.10 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-cosmic-prod-apt'
        release: 'cosmic'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 19.04 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-disco-prod-apt'
        release: 'disco'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 19.10 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-eoan-prod-apt'
        release: 'eoan'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 20.04 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-focal-prod-apt'
        release: 'focal'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 20.10 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-groovy-prod-apt'
        release: 'groovy'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 21.04 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-hirsute-prod-apt'
        release: 'hirsute'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 21.10 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-impish-prod-apt'
        release: 'impish'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 22.04 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-jammy-prod-apt'
        release: 'jammy'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 22.10 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-kinetic-prod-apt'
        release: 'kinetic'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 23.04 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-lunar-prod-apt'
        release: 'lunar'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 14.04 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-trusty-prod-apt'
        release: 'trusty'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 15.10 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-wily-prod-apt'
        release: 'wily'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 16.04 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-xenial-prod-apt'
        release: 'xenial'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 16.10 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-yakkety-prod-apt'
        release: 'yakkety'
        
    - task: PublishLinuxPackagesPMC@0
      displayName: 'Ubuntu 17.04 deb publish'
      inputs:
        profile: 'prod' # or 'tuxdev'
        authType: 'wif'
        auth_token: $(idToken) # no quotations
        tenant_ID: $(tenantId) # no quotations
        service_principal_ID: $(servicePrincipalId) # no quotations
        package_path: '$(Agent.BuildDirectory)/drop/packages'
        repository: 'microsoft-ubuntu-zesty-prod-apt'
        release: 'zesty'

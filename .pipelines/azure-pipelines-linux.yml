# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# ADO link: https://msazure.visualstudio.com/One/_apps/hub/ms.vss-build-web.ci-designer-hub?pipelineId=297462&branch=main

trigger:
  none
    
pr: none

pool:
  vmImage: ubuntu-latest

variables:
  VcVersion : 1.11.0
  ROOT: $(Build.SourcesDirectory)
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  ENABLE_PRS_DELAYSIGN: 1
  GitVersion.SemVer: ''
  

steps:

- task: PipAuthenticate@1
  inputs:
    artifactFeeds: 'CRC-Dev'
- script: pip install pmc-cli
- task: UseDotNet@2
  continueOnError: false
  inputs:
    packageType: 'sdk'
    version: '6.0.406'
    useGlobalJson: false
    performMultiLevelLookup: true
    workingDirectory: '$(Build.SourcesDirectory)'

- script: chmod -R +x $(Build.SourcesDirectory)
  displayName: 'Allow scripts to be executable on Linux'

  # Ensure the artifact output/bin/obj directories are clean.
# - script: $(Build.SourcesDirectory)/clean.cmd
  # displayName: 'Clean Output Directories'
  
  # Build the repo.
- script: $(Build.SourcesDirectory)/build.sh $(VcVersion)
  displayName: 'Build Solutions'

  # Build NuGet packages for the services/agents in the repo.
# - script: $(Build.SourcesDirectory)/build-packages.cmd $(VcVersion)$(VersionSuffix)
  # displayName: 'Build NuGet Packages'

- task: EsrpCodeSigning@1
  inputs:
    ConnectedServiceName: 'virtualclient-esrp'
    FolderPath: '$(System.DefaultWorkingDirectory)'
    Pattern: '*.*'
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [
          {
              "KeyCode" : "CP-450779-Pgp",
              "OperationCode" : "LinuxSign",
              "Parameters" : {},
              "ToolName" : "sign",
              "ToolVersion" : "1.0"
          }
      ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

#- script: $(Build.SourcesDirectory)/upload-packages.cmd $(Build.SourcesDirectory)/out/packages $(NUGETORGAPIKEY)
#  displayName: 'Publish NuGet Packages'
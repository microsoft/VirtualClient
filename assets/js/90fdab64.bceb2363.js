"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[5405],{6883:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var r=i(4848),n=i(8453);const s={},d="DCGMI",o={id:"workloads/dcgmi/dcgmi",title:"DCGMI",description:"The NVIDIA Data Center GPU Manager (DCGM) has DCGMI (Data Center GPU Management Interface) as a command line utility, which is a software tool for managing and monitoring GPU resources in a data center environment. DCGMi provides administrators with access to a wide range of information about the state of GPUs in their data center, including utilization, temperature, power consumption, and more.",source:"@site/docs/workloads/dcgmi/dcgmi.md",sourceDirName:"workloads/dcgmi",slug:"/workloads/dcgmi/",permalink:"/VirtualClient/docs/workloads/dcgmi/",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/workloads/dcgmi/dcgmi.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CoreMark Workload Profiles",permalink:"/VirtualClient/docs/workloads/coremark/coremark-profiles"},next:{title:"DCGMI Workload Profiles",permalink:"/VirtualClient/docs/workloads/dcgmi/dcgmi-profiles"}},c={},a=[{value:"Supported Commands",id:"supported-commands",level:2},{value:"DCGMI Output Description",id:"dcgmi-output-description",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"dcgmi",children:"DCGMI"}),"\n",(0,r.jsx)(t.p,{children:"The NVIDIA Data Center GPU Manager (DCGM) has DCGMI (Data Center GPU Management Interface) as a command line utility, which is a software tool for managing and monitoring GPU resources in a data center environment. DCGMi provides administrators with access to a wide range of information about the state of GPUs in their data center, including utilization, temperature, power consumption, and more."}),"\n",(0,r.jsx)(t.p,{children:"DCGM is part of the Nvidia GPU Deployment Kit and is designed to work with Nvidia's Tesla GPU accelerators, which are commonly used in data centers for high-performance computing and other GPU-accelerated workloads."}),"\n",(0,r.jsx)(t.p,{children:"At its heart, DCGM is an intelligent, lightweight user space library/agent that performs a variety of functions on each host system:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"GPU behavior monitoring"}),"\n",(0,r.jsx)(t.li,{children:"GPU configuration management"}),"\n",(0,r.jsx)(t.li,{children:"GPU policy oversight"}),"\n",(0,r.jsx)(t.li,{children:"GPU health and diagnostics"}),"\n",(0,r.jsx)(t.li,{children:"GPU accounting and process statistics"}),"\n",(0,r.jsx)(t.li,{children:"NVSwitch configuration and monitoring"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://docs.nvidia.com/datacenter/dcgm/latest/user-guide/index.html",children:"DCGMI user guide"})}),"\n",(0,r.jsx)(t.h2,{id:"supported-commands",children:"Supported Commands"}),"\n",(0,r.jsx)(t.p,{children:"DCGM Diagnostics are designed to:"}),"\n",(0,r.jsx)(t.p,{children:"Provide multiple test timeframes to facilitate different preparedness or failure conditions:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Level 1 tests to use as a readiness metric"}),"\n",(0,r.jsx)(t.li,{children:"Level 2 tests to use as an epilogue on failure"}),"\n",(0,r.jsx)(t.li,{children:"Level 3 and Level 4 tests to be run by an administrator as post-mortem."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"It is a single tool to discover deployment, system software and hardware configuration issues, basic diagnostics, integration issues, and relative system performance."}),"\n",(0,r.jsx)(t.p,{children:'Commands supported are "dcgmi diag", "dcgmi discovery","dcgmi fieldgroup", " dcgmi group", "dcgmi modules", "dcgmi health" and CUDA Generator scenario.'}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"dcgmi diag -r {level} -j\ndcgmi discovery -l\ndcgmi fieldgroup -l\ndcgmi group -l\ndcgmi modules -l\ndcgmi health -c -j\nCUDA generator scenario:\n/usr/bin/dcgmproftester11 --no-dcgm-validation -t {FieldID} -d 10\ndcgmi dmon -e {ListOfFieldIDs} -c 15\n"})}),"\n",(0,r.jsx)(t.p,{children:"Please create a feature request if you need support for any other commands."}),"\n",(0,r.jsx)(t.h2,{id:"dcgmi-output-description",children:"DCGMI Output Description"}),"\n",(0,r.jsx)(t.p,{children:"The following section describes the various counters/metrics that are available with the dcgmi toolset."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Metric Name"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Value"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Deployment_Denylist"}),(0,r.jsx)(t.td,{children:"checks if machine has expected deny list of processes to run on GPU"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Deployment_NVML Library"}),(0,r.jsx)(t.td,{children:"NVML library access and versioning check"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Deployment_CUDA Main Library"}),(0,r.jsx)(t.td,{children:"CUDA library access and versioning"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Deployment_Permissions and OS Blocks"}),(0,r.jsx)(t.td,{children:"checks permissions for a specific GPU and enforce OS level block to ensure GPU resources are being used in secure way"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Deployment_Persistence Mode"}),(0,r.jsx)(t.td,{children:"checks the behaviour of GPU persistence mode, which allows GPUs to maintain their state even when a process terminates or the GPU is reset"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Deployment_Environment Variables"}),(0,r.jsx)(t.td,{children:"checks the behaviour of environment variables, which are used to control and configure the behaviour of DCGM."}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Deployment_Page Retirement/Row Remap"}),(0,r.jsx)(t.td,{children:"checks the behaviour of Page Retirement and Row Remap, which are advanced memory management features that can help to improve the reliability and stability of GPU-based applications."}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Deployment_Graphics Processes"}),(0,r.jsx)(t.td,{children:"checks the behaviour of graphics processes, which are processes that are run on GPUs to perform graphical or computational tasks."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Integration_PCIe"}),(0,r.jsx)(t.td,{children:"Verify PCIe connection, Monitor PCIe performance, Verify results"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Deployment_Inforom"}),(0,r.jsx)(t.td,{children:"checks the behavior of the Inforom, which is a chip located on the GPU that provides information about the GPU, its configuration, and its performance."}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Hardware_GPU Memory"}),(0,r.jsx)(t.td,{children:"checks the GPU memory behaviour which is used to store data and perform computations."}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Hardware_Diagnostic"}),(0,r.jsx)(t.td,{children:"diagnose any issues with the GPU and its components"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Hardware_Pulse Test"}),(0,r.jsx)(t.td,{children:"performance test that is used to check the performance of the GPU"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Stress_Targeted Stress"}),(0,r.jsx)(t.td,{children:"check the performance and stability under heavy load."}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Stress_Targeted Power"}),(0,r.jsx)(t.td,{children:"check the power consumption under different load conditions"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Hardware_EUD Test"}),(0,r.jsx)(t.td,{children:"check the error detection and correction capabilities of the GPU memory."}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Stress_Memory Bandwidth"}),(0,r.jsx)(t.td,{children:"check the memory bandwidth performance of a GPU"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Stress_Memtest"}),(0,r.jsx)(t.td,{children:"stresses the GPU memory in order to identify any issues or errors"}),(0,r.jsx)(t.td,{children:"1"})]})]})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"NOTE: Value 1,-1,0 indicates pass, skip, fail of tests respectively.\n"})})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>d,x:()=>o});var r=i(6540);const n={},s=r.createContext(n);function d(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);
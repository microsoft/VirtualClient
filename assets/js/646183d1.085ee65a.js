"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[2012],{8417:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var a=s(4848),i=s(8453);const t={},r="Install Linux Packages",l={id:"dependencies/0010-install-linux-packages",title:"Install Linux Packages",description:"Virtual Client has a dependency component that can be added to a workload or monitor profile to install dependency packages from a package store. The following section illustrates the",source:"@site/docs/dependencies/0010-install-linux-packages.md",sourceDirName:"dependencies",slug:"/dependencies/0010-install-linux-packages",permalink:"/VirtualClient/docs/dependencies/0010-install-linux-packages",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/dependencies/0010-install-linux-packages.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Wait Executor Dependency",permalink:"/VirtualClient/docs/dependencies/0002-wait-executor"},next:{title:"Install Snap Packages",permalink:"/VirtualClient/docs/dependencies/0011-install-snap-packages"}},c={},d=[{value:"Supported Platform/Architectures",id:"supported-platformarchitectures",level:2},{value:".NET Supported Linux Distributions",id:"net-supported-linux-distributions",level:2},{value:"Supported Package Managers and Distros",id:"supported-package-managers-and-distros",level:2},{value:"Define LinuxPackageInstallation dependency",id:"define-linuxpackageinstallation-dependency",level:2},{value:"Example: Packages that have the same name across distros",id:"example-packages-that-have-the-same-name-across-distros",level:2},{value:"Example: Packages that have different names across package managers",id:"example-packages-that-have-different-names-across-package-managers",level:2},{value:"Example: Packages that have different names across different Linux distros",id:"example-packages-that-have-different-names-across-different-linux-distros",level:2},{value:"Example: Packages that require specific repositories",id:"example-packages-that-require-specific-repositories",level:2},{value:"Example: Packages that require repositories specific to a given Linux distro",id:"example-packages-that-require-repositories-specific-to-a-given-linux-distro",level:2},{value:"Mapping: Common Packages Used in Virtual Client Profiles",id:"mapping-common-packages-used-in-virtual-client-profiles",level:2}];function o(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"install-linux-packages",children:"Install Linux Packages"}),"\n",(0,a.jsx)(n.p,{children:"Virtual Client has a dependency component that can be added to a workload or monitor profile to install dependency packages from a package store. The following section illustrates the\ndetails for integrating this into the profile. The platform has a goal to supporting all platforms and specifics with relative ease (i.e. it should work out-of-the-box).\nInstalling a package is easy. Installing packages on different platforms and package managers is not."}),"\n",(0,a.jsx)(n.p,{children:"The platform encapsulates the complex logic of handling package installation on different distros into a single component that users can easily\nuse in profiles."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://wiki.debian.org/AptCLI",children:"Package Manager Apt"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/rpm-software-management/dnf",children:"Package Manager Dnf"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"http://yum.baseurl.org/",children:"Package Manager Yum"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://en.opensuse.org/Portal:Zypper",children:"Package Manager Zypper"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.linode.com/docs/guides/linux-package-management-overview/",children:"A Good Third-Party Intro"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://pkgs.org/",children:"Search for Packages"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"supported-platformarchitectures",children:"Supported Platform/Architectures"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"linux-x64"}),"\n",(0,a.jsx)(n.li,{children:"linux-arm64"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"net-supported-linux-distributions",children:".NET Supported Linux Distributions"}),"\n",(0,a.jsx)(n.p,{children:"VirtualClient runs on .NET 8. It should run on any distribution supported by .NET 8."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/dotnet/core/blob/main/release-notes/8.0/supported-os.md",children:"Supported Distros"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"supported-package-managers-and-distros",children:"Supported Package Managers and Distros"}),"\n",(0,a.jsxs)(n.p,{children:["The following table shows the list of package managers and the Linux distros on which they are typically supported by default. Note that this list does not infer that\nall Virtual Client workloads and profiles have been properly tested and confirmed working across all of these package managers and distros but is intended only\nto help users of the application make basic determinations on the likelihood that a particular profile will operate correctly on a given distro. It is entirely possible that\nsome workloads, monitors or dependencies simply will not work on specific distros.To make this easier for users to determine whether a given profile was tested and confirmed\nto work on a particular distro, the profile may contain a ",(0,a.jsx)(n.strong,{children:"SupportedDistributions"})," parameter indicating this."]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Package Manager"}),(0,a.jsx)(n.th,{children:"Distributions"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"apt"}),(0,a.jsx)(n.td,{children:"Debian, Ubuntu"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"dnf"}),(0,a.jsx)(n.td,{children:"CentOS/RHEL8, Mariner, Fedora"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"yum"}),(0,a.jsx)(n.td,{children:"CentOS/RHEL7"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"zypper"}),(0,a.jsx)(n.td,{children:"OpenSUSE"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"None"}),(0,a.jsx)(n.td,{children:"Flatcar"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"define-linuxpackageinstallation-dependency",children:"Define LinuxPackageInstallation dependency"}),"\n",(0,a.jsx)(n.p,{children:"LinuxPackageInstallation is a dependency class that handles the complexity of installing different packages on different Linux distributions. The package installation scenarios given\ndifferent Linux distros are as follows:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Packages with the same name across all distros."}),"\n",(0,a.jsx)(n.li,{children:"Packages with specific names depending upon the distro."}),"\n",(0,a.jsx)(n.li,{children:"Packages with specific names dependending upon the package manager."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"example-packages-that-have-the-same-name-across-distros",children:"Example: Packages that have the same name across distros"}),"\n",(0,a.jsx)(n.p,{children:"This is the simplest case. The package is well-known and all package managers use the same name for the package."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/microsoft/VirtualClient/blob/main/src/VirtualClient/VirtualClient.Main/profiles/PERF-GRAPH500.json",children:"Profile Example"})}),"\n",(0,a.jsx)("div",{class:"code-section",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "Type": "LinuxPackageInstallation",\n    "Parameters": {\n        "Scenario": "InstallRequiredLinuxPackages",\n        "Packages": "make,mpich"\n    }\n}\n'})})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"example-packages-that-have-different-names-across-package-managers",children:"Example: Packages that have different names across package managers"}),"\n",(0,a.jsx)(n.p,{children:"If the packages are directly available in the default repositories, users only need to fill in the corresponding package names, in the different package manager.\nYou need to repeat it for other package management because the name could be different in different package manager.\nThe following is example for libaio, which is used in FIO tests."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/microsoft/VirtualClient/blob/main/src/VirtualClient/VirtualClient.Main/profiles/PERF-GPU-SUPERBENCH.json",children:"Profile Example"})}),"\n",(0,a.jsx)("div",{class:"code-section",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "Type": "LinuxPackageInstallation",\n    "Parameters": {\n        "Packages-Apt": "libaio1,libaio-dev",\n        "Packages-Dnf": "libaio,libaio-devel",\n        "Packages-Yum": "libaio,libaio-devel",\n        "Packages-Zypper": "libaio1,libaio-dev"\n    }\n}\n'})})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"example-packages-that-have-different-names-across-different-linux-distros",children:"Example: Packages that have different names across different Linux distros"}),"\n",(0,a.jsxs)(n.p,{children:["There are packages that has different names/paths in different distributions. It follows the convention of ",(0,a.jsx)(n.em,{children:"Packages-Distro"}),".\nThe following example is for Atop. Apt and Zypper have them in default repository, however Redhat decided to put them in EPEL repo and not as default.",(0,a.jsx)(n.br,{}),"\n","However, please note that in actual installation, epel-release and atop can't be installed in the same command.\nEpel-release needs to be installed first, so this is separated into two LinuxPackageInstallation."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/microsoft/VirtualClient/blob/main/src/VirtualClient/VirtualClient.Main/profiles/MONITORS-DEFAULT.json",children:"Profile Example"})}),"\n",(0,a.jsx)("div",{class:"code-section",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "Type": "LinuxPackageInstallation",\n    "Parameters": {\n        "Packages-RHEL8": "https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm",\n        "Packages-RHEL7": "https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm",\n        "Packages-CentOS7": "epel-release",\n        "Packages-Apt": "atop",\n        "Packages-Dnf": "atop",\n        "Packages-Yum": "atop",\n        "Packages-Zypper": "atop"\n    }\n}\n'})})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"example-packages-that-require-specific-repositories",children:"Example: Packages that require specific repositories"}),"\n",(0,a.jsxs)(n.p,{children:["There are packages that are not available in the default repositories. Thus VC needs to add them to the system. Due to how package manager works, they are intrinsicly packageManager specific.\nIt follows the convention of ",(0,a.jsx)(n.em,{children:"Repositories-PackageManager"}),"."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/microsoft/VirtualClient/blob/main/src/VirtualClient/VirtualClient.Main/profiles/PERF-NETWORK-DEATHSTARBENCH.json",children:"Profile Example"})}),"\n",(0,a.jsx)("div",{class:"code-section",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "Type": "LinuxPackageInstallation",\n    "Parameters": {\n        "Repositories-Apt": "ppa:ubuntu-toolchain-r/test",\n        "Packages-Apt": "gcc-10",\n        "Packages-Dnf": "gcc-toolset-10",\n        "Packages-Yum": "gcc-toolset-10",\n        "Packages-Zypper": "gcc10"\n    }\n}\n'})})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"example-packages-that-require-repositories-specific-to-a-given-linux-distro",children:"Example: Packages that require repositories specific to a given Linux distro"}),"\n",(0,a.jsxs)(n.p,{children:["There are packages that are not available in the default repositories. Thus VC needs to add them to the system. What makes it worse is that those repository could be distro-version specific.\nFor these scenarios, LinuxPackageInstallation class supports definition of distro-specific extra repository. It follows the convention of ",(0,a.jsx)(n.em,{children:"Repositories-Distro"}),".\nLuckily so far VC does not use those packages in current workloads. However, those things do exist."]}),"\n",(0,a.jsx)("div",{class:"code-section",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "Type": "LinuxPackageInstallation",\n    "Parameters": {\n        "Repositories-RHEL8": "RHEL8.repo, IWillUpdateWhenIHaveARealExample",\n        "Repositories-RHEL7": "RHEL7.repo, IWillUpdateWhenIHaveARealExample",\n        "Packages-Apt": "somePackage",\n        "Packages-Dnf": "somePackage",\n        "Packages-Yum": "somePackage",\n        "Packages-Zypper": "somePackage"\n    }\n}\n'})})}),"\n",(0,a.jsx)(n.h2,{id:"mapping-common-packages-used-in-virtual-client-profiles",children:"Mapping: Common Packages Used in Virtual Client Profiles"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Package"}),(0,a.jsx)(n.th,{children:"apt"}),(0,a.jsx)(n.th,{children:"dnf"}),(0,a.jsx)(n.th,{children:"yum"}),(0,a.jsx)(n.th,{children:"zypper"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"atop"}),(0,a.jsx)(n.td,{children:"atop"}),(0,a.jsx)(n.td,{children:"atop(extra package)"}),(0,a.jsx)(n.td,{children:"atop(extra package)"}),(0,a.jsx)(n.td,{children:"atop"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"automake"}),(0,a.jsx)(n.td,{children:"automake"}),(0,a.jsx)(n.td,{children:"automake"}),(0,a.jsx)(n.td,{children:"automake"}),(0,a.jsx)(n.td,{children:"automake"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"bison"}),(0,a.jsx)(n.td,{children:"bison"}),(0,a.jsx)(n.td,{children:"bison"}),(0,a.jsx)(n.td,{children:"bison"}),(0,a.jsx)(n.td,{children:"bison"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"byacc"}),(0,a.jsx)(n.td,{children:"byacc"}),(0,a.jsx)(n.td,{children:"byacc"}),(0,a.jsx)(n.td,{children:"byacc"}),(0,a.jsx)(n.td,{children:"byacc"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"cmake"}),(0,a.jsx)(n.td,{children:"cmake"}),(0,a.jsx)(n.td,{children:"cmake"}),(0,a.jsx)(n.td,{children:"cmake"}),(0,a.jsx)(n.td,{children:"cmake"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"gcc"}),(0,a.jsx)(n.td,{children:"gcc"}),(0,a.jsx)(n.td,{children:"gcc"}),(0,a.jsx)(n.td,{children:"gcc"}),(0,a.jsx)(n.td,{children:"gcc"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"gcc-11"}),(0,a.jsx)(n.td,{children:"gcc-11"}),(0,a.jsx)(n.td,{children:"gcc-toolset-11"}),(0,a.jsx)(n.td,{children:"centos-release-scl-rh,devtoolset-11-gcc"}),(0,a.jsx)(n.td,{children:"gcc11"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"libaio"}),(0,a.jsx)(n.td,{children:"libaio1"}),(0,a.jsx)(n.td,{children:"libaio"}),(0,a.jsx)(n.td,{children:"libaio"}),(0,a.jsx)(n.td,{children:"libaio1"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"libaio-dev"}),(0,a.jsx)(n.td,{children:"libaio-dev"}),(0,a.jsx)(n.td,{children:"libaio-devel"}),(0,a.jsx)(n.td,{children:"libaio-devel"}),(0,a.jsx)(n.td,{children:"libaio-dev"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"make"}),(0,a.jsx)(n.td,{children:"make"}),(0,a.jsx)(n.td,{children:"make"}),(0,a.jsx)(n.td,{children:"make"}),(0,a.jsx)(n.td,{children:"make"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"nvidia-driver"}),(0,a.jsx)(n.td,{children:"nvidia-common"}),(0,a.jsx)(n.td,{children:"nvidia-driver"}),(0,a.jsx)(n.td,{children:"nvidia-driver"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://software.opensuse.org/package/nvidia-driver",children:"N/A"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"mpich"}),(0,a.jsx)(n.td,{children:"mpich"}),(0,a.jsx)(n.td,{children:"mpich"}),(0,a.jsx)(n.td,{children:"mpich"}),(0,a.jsx)(n.td,{children:"mpich"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"python3-pip"}),(0,a.jsx)(n.td,{children:"python3-pip"}),(0,a.jsx)(n.td,{children:"python3-pip"}),(0,a.jsx)(n.td,{children:"python3-pip"}),(0,a.jsx)(n.td,{children:"python3-pip"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"sshpass"}),(0,a.jsx)(n.td,{children:"sshpass"}),(0,a.jsx)(n.td,{children:"sshpass"}),(0,a.jsx)(n.td,{children:"sshpass"}),(0,a.jsx)(n.td,{children:"sshpass"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"stress-ng"}),(0,a.jsx)(n.td,{children:"stress-ng"}),(0,a.jsx)(n.td,{children:"stress-ng"}),(0,a.jsx)(n.td,{children:"stress-ng"}),(0,a.jsx)(n.td,{children:"stress-ng"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var a=s(6540);const i={},t=a.createContext(i);function r(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);
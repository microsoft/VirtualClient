"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[1088],{7393:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=t(4848),r=t(8453);const s={},a="Data/Telemetry Support",o={id:"guides/0040-telemetry",title:"Data/Telemetry Support",description:"The Virtual Client emits a range of different types of data/telemetry as part of the execution of workload and monitoring",source:"@site/docs/guides/0040-telemetry.md",sourceDirName:"guides",slug:"/guides/0040-telemetry",permalink:"/VirtualClient/docs/guides/0040-telemetry",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/guides/0040-telemetry.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Run Commercial Workloads: Bring Your Own Package",permalink:"/VirtualClient/docs/guides/0030-commercial-workloads"},next:{title:"Usage: Command Line Examples",permalink:"/VirtualClient/docs/guides/0200-usage-examples"}},l={},c=[{value:"Categories of Data",id:"categories-of-data",level:2},{value:"Metadata Contract",id:"metadata-contract",level:2},{value:"Log Files",id:"log-files",level:2},{value:"Metrics Log File Schema and Requirements",id:"metrics-log-file-schema-and-requirements",level:3},{value:"Events Log File Schema and Requirements",id:"events-log-file-schema-and-requirements",level:3},{value:"Larger-Scale Scenarios",id:"larger-scale-scenarios",level:2},{value:"Azure Event Hubs Support",id:"azure-event-hubs-support",level:3},{value:"Azure Storage Account Support",id:"azure-storage-account-support",level:3}];function d(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"datatelemetry-support",children:"Data/Telemetry Support"}),"\n",(0,i.jsx)(n.p,{children:"The Virtual Client emits a range of different types of data/telemetry as part of the execution of workload and monitoring\nprofiles. This data/telemetry might for example include measurements/metrics emitted by a particular workload, performance counters\nor just common tracing/logging output. This data is useful for using the Virtual Client as a platform for evaluating performance\nof a system while under test."}),"\n",(0,i.jsx)(n.h2,{id:"categories-of-data",children:"Categories of Data"}),"\n",(0,i.jsx)(n.p,{children:"Telemetry data emitted is divided into 3 different categories:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Logs/Traces"}),(0,i.jsx)(n.br,{}),"\n","The Virtual Client is heavily instrumented with structured logging/tracing logic. This ensures that the inner workings of the application can\nare easily visible to the user. This is particularly important for debugging scenarios. Errors experienced by the application are captured here\nas well and will contain detailed error + callstack information."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Workload and System Metrics"}),(0,i.jsx)(n.br,{}),"\n","Workload metrics are measurements and information captured from the output of a particular workload (e.g. DiskSpd, FIO, GeekBench) that represent\nperformance data from the system under test. Performance counters for example provide measurements from the system as-a-whole and are useful for determining exactly how the resources (e.g. CPU, memory, I/O, network)\nwere used during the execution of a workload."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"System Events"}),(0,i.jsx)(n.br,{}),"\n","System events describe certain types of important information on the system beyond simple performance measurements. This might for example\ninclude Windows registry changes or special event logs."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"metadata-contract",children:"Metadata Contract"}),"\n",(0,i.jsx)(n.p,{children:'Within the different categories of data emitted by the Virtual Client (as noted above), the Virtual Client includes a range of different metadata about the\nsystem and runtime context as it runs. This "metadata contract" is divided into a few different categories of metadata by default. The following section describes\nthose categories and illustrates examples of the structure of the telemetry messages emitted.'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"User-Defined Metadata"}),"\nMetadata that is supplied by the user on the command line (e.g. --metadata",":Prop1",'=Value1) will be included in the output of telemetry within the "metadata" section\nof the telemetry structure.']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Dependency Metadata"}),(0,i.jsx)(n.br,{}),"\n","Dependency metadata describes different dependencies that were required/used during the execution of the Virtual Client. This information might for example include packages\nthat were downloaded or installed on the system."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Host/OS Metadata"}),(0,i.jsx)(n.br,{}),"\n",'Host metadata includes information about the host, the operating system and the hardware for the system in which Virtual Client is running. This information is included in the\n"metadata_host" section of the telemetry structure.']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Runtime Metadata"}),(0,i.jsx)(n.br,{}),"\n",'Runtime metadata describes the instructions provided to the Virtual Client on the command line and aspects that are specific to the running instance of the application.\nThis information is included in the "metadata_runtime" section of the telemetry structure.']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scenario Metadata"}),"\nScenario metadata is information specific to a given component within a Virtual Client profile. This might include the parameters for a action, monitor or dependency component.\nIt might include installed compiler versions, the names of tools executed and their command line arguments or supplemental information in the context of a workload that is running.\nDevelopers onboarding components to the Virtual Client have the option to add additional scenario-specific metadata as is desirable to provide rich context to the\nexecution of workloads and monitors."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example Metadata/Telemetry from Physical System"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "2023-08-07T17:52:51.6630597Z",\n  "level": "Information",\n  "message": "OpenSSL.ScenarioResult",\n  "customDimensions": {\n      "appPlatformVersion": "1.6.0.0",\n      "appVersion": "1.6.0.0",\n      "clientId": "longrun",\n      "executionProfileName": "PERF-CPU-OPENSSL.json",\n      "executionProfilePath": "S:\\\\Debug\\\\PERF-CPU-OPENSSL.json",\n      "executionSystem": null,\n      "experimentId": "dbd29735-589d-4f15-adc7-2f1ec3991f03",\n      "metricCategorization": "",\n      "metricDescription": "",\n      "metricMetadata": {},\n      "metricName": "md5 16-byte",\n      "metricRelativity": "HigherIsBetter",\n      "metricUnit": "kilobytes/sec",\n      "metricValue": 39359.36,\n      "platformArchitecture": "win-x64",\n      "scenarioArguments": "S:\\\\VirtualClient\\\\content\\\\win-x64\\\\packages\\\\openssl.3.0.0\\\\win-x64\\\\bin\\\\openssl.exe speed -elapsed -seconds 100 md5",\n      "scenarioEndTime": "2023-08-08T00:52:51.6232956Z",\n      "scenarioName": "OpenSSL Speed",\n      "scenarioStartTime": "2023-08-08T00:52:21.4592999Z",\n      "tags": "CPU,OpenSSL,Cryptography",\n      "toolName": "OpenSSL",\n      "toolVersion": "",\n      "metadata": {\n          "experimentId": "dbd29735-589d-4f15-adc7-2f1ec3991f03",\n          "agentId": "LONGRUN"\n      },\n      "metadata_dependencies": {\n          "package_openssl": "openssl.3.0.0.zip"\n      },\n      "metadata_host": {\n          "computerName": "LONGRUN",\n          "cpuArchitecture": "X64",\n          "cpuSockets": 1,\n          "cpuPhysicalCores": 4,\n          "cpuPhysicalCoresPerSocket": 4,\n          "cpuLogicalProcessors": 8,\n          "cpuLogicalProcessorsPerCore": 8,\n          "cpuCacheBytes_L1d": 131072,\n          "cpuCacheBytes_L1i": 131072,\n          "cpuCacheBytes_L1": 262144,\n          "cpuCacheBytes_L2": 1048576,\n          "cpuCacheBytes_L3": 8388608,\n          "cpuLastCacheBytes": 8388608,\n          "memoryBytes": 17179869184,\n          "numaNodes": 0,\n          "osFamily": "Windows",\n          "osName": "Windows",\n          "osDescription": "Microsoft Windows NT 10.0.19045.0",\n          "osVersion": "10.0.19045.0",\n          "osPlatformArchitecture": "win-x64",\n          "parts": [\n              {\n                  "type": "CPU",\n                  "vendor": "Intel",\n                  "description": "Intel64 Family 6 Model 142 Stepping 11, GenuineIntel",\n                  "family": "6",\n                  "model": "Intel(R) Core(TM) i7-8565U CPU @ 1.80GHz",\n                  "stepping": "11",\n              },\n              {\n                  "type": "Memory",\n                  "vendor": "SK Hynix",\n                  "description:": "SK Hynix HMA81GS6JJR8N-VK"\n                  "bytes": 8589934592,\n                  "speed": 2400,\n                  "partNumber": "HMA81GS6JJR8N-VK"\n              },\n              {\n                  "type": "Memory",\n                  "vendor": "SK Hynix",\n                  "description:": "SK Hynix HMA81GS6JJR8N-VK"\n                  "bytes": 8589934592,\n                  "speed": 2400,\n                  "partNumber": "HMA81GS6JJR8N-VK"\n              },\n              {\n                  "type": "Network",\n                  "vendor": "Intel",\n                  "description": "Intel(R) Wireless-AC 9560 160MHz"\n              },\n              {\n                  "type": "Network",\n                  "vendor": "Realtek",\n                  "description": "Realtek PCIe GBE Family Controller"\n              }\n          ]\n      },\n      "metadata_runtime": {\n          "exitWait": "00:30:00",\n          "layout": null,\n          "logToFile": false,\n          "iterations": 2,\n          "profiles": "PERF-CPU-OPENSSL.json",\n          "timeout": null,\n          "timeoutScope": null,\n          "scenarios": null\n      },\n      "metadata_scenario": {\n          "scenario": "MD5",\n          "packageName": "openssl",\n          "extract": "True",\n          "monitorFrequency": "12:00:00",\n          "monitorWarmupPeriod": "00:05:00",\n          "commandArguments": "speed -elapsed -seconds 100 md5",\n          "tags": "CPU,OpenSSL,Cryptography",\n          "profileIteration": 1,\n          "profileIterationStartTime": "2023-08-08T00:52:20.7673266Z",\n          "toolName": "OpenSSL Speed",\n          "toolArguments": "S:\\\\VirtualClient\\\\content\\\\win-x64\\\\packages\\\\openssl.3.0.0\\\\win-x64\\\\bin\\\\openssl.exe speed -elapsed -seconds 100 md5",\n          "toolVersion": null,\n          "packageVersion": "3.0.0"\n      }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example Metadata/Telemetry from Physical System"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "2023-08-07T17:52:51.6630597Z",\n  "level": "Information",\n  "message": "OpenSSL.ScenarioResult",\n  "customDimensions": {\n      "appPlatformVersion": "1.6.0.0",\n      "appVersion": "1.6.0.0",\n      "clientId": "longrun",\n      "executionProfileName": "PERF-CPU-OPENSSL.json",\n      "executionProfilePath": "S:\\\\Debug\\\\PERF-CPU-OPENSSL.json",\n      "executionSystem": null,\n      "experimentId": "dbd29735-589d-4f15-adc7-2f1ec3991f03",\n      "metricCategorization": "",\n      "metricDescription": "",\n      "metricMetadata": {},\n      "metricName": "md5 16-byte",\n      "metricRelativity": "HigherIsBetter",\n      "metricUnit": "kilobytes/sec",\n      "metricValue": 39359.36,\n      "platformArchitecture": "win-x64",\n      "scenarioArguments": "/home/user/VirtualClient/packages/openssl.3.0.0/linux-x64/bin/openssl speed -multi 4 -elapsed -seconds 100 md5",\n      "scenarioEndTime": "2023-08-08T00:52:51.6232956Z",\n      "scenarioName": "OpenSSL Speed",\n      "scenarioStartTime": "2023-08-08T00:52:21.4592999Z",\n      "tags": "CPU,OpenSSL,Cryptography",\n      "toolName": "OpenSSL",\n      "toolVersion": "",\n      "metadata": {\n          "experimentId": "dbd29735-589d-4f15-adc7-2f1ec3991f03",\n          "agentId": "LONGRUN"\n      },\n      "metadata_dependencies": {\n          "package_openssl": "openssl.3.0.0.zip"\n      },\n      "metadata_host": {\n          "computerName": "Linux-Host",\n          "osFamily": "Unix",\n          "osName": "Ubuntu",\n          "osDescription": "Unix 4.15.0.140",\n          "osVersion": "4.15.0.140",\n          "osPlatformArchitecture": "linux-x64",\n          "cpuArchitecture": "X64",\n          "cpuSockets": 1,\n          "cpuPhysicalCores": 4,\n          "cpuPhysicalCoresPerSocket": 4,\n          "cpuLogicalProcessors": 4,\n          "cpuLogicalProcessorsPerCore": 4,\n          "numaNodes": 1,\n          "cpuCacheBytes_L1d": 32768,\n          "cpuCacheBytes_L1i": 32768,\n          "cpuCacheBytes_L1": 65536,\n          "cpuCacheBytes_L2": 2097152,\n          "cpuLastCacheBytes": 2097152,\n          "memoryBytes": 8589934592,\n          "parts": [\n              {\n                  "type": "CPU",\n                  "vendor": "AMD",\n                  "description": "AMD A8-7410 APU with AMD Radeon R5 Graphics Family 22 Model 48 Stepping 1, AuthenticAMD",\n                  "family": "22",\n                  "model": "AMD A8-7410 APU with AMD Radeon R5 Graphics",\n                  "stepping": "1",\n              },\n              {\n                  "type": "Memory",\n                  "vendor": "Micron",\n                  "description": "Micron, 16KTF1G64HZ-1G9P1",\n                  "bytes": 8589934592,\n                  "speed": 1866,\n                  "partNumber": "16KTF1G64HZ-1G9P1"\n              },\n              {\n                  "type": "Network",\n                  "vendor": "Realtek",\n                  "description": "Realtek Semiconductor Co., Ltd. RTL8188EE Wireless Network Adapter (rev 01)"\n              },\n              {\n                  "type": "Network",\n                  "vendor": "Realtek",\n                  "description": "Realtek Semiconductor Co., Ltd. RTL810xE PCI Express Fast Ethernet controller (rev 07)"\n              }\n          ]\n      },\n      "metadata_runtime": {\n          "exitWait": "00:30:00",\n          "layout": null,\n          "logToFile": false,\n          "iterations": 2,\n          "profiles": "PERF-CPU-OPENSSL.json",\n          "timeout": null,\n          "timeoutScope": null,\n          "scenarios": null\n      },\n      "metadata_scenario": {\n          "scenario": "MD5",\n          "packageName": "openssl",\n          "extract": "True",\n          "monitorFrequency": "12:00:00",\n          "monitorWarmupPeriod": "00:05:00",\n          "commandArguments": "speed -elapsed -seconds 100 md5",\n          "tags": "CPU,OpenSSL,Cryptography",\n          "profileIteration": 1,\n          "profileIterationStartTime": "2023-08-08T00:52:20.7673266Z",\n          "toolName": "OpenSSL Speed",\n          "toolArguments": "/home/user/VirtualClient/packages/openssl.3.0.0/linux-x64/bin/openssl speed -multi 4 -elapsed -seconds 100 md5",\n          "toolVersion": null,\n          "packageVersion": "3.0.0"\n      }\n   }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example Metadata/Telemetry from Virtual Machine System"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "2023-08-10T22:34:41.4831010Z",\n  "level": "Information",\n  "message": "OpenSSL.ScenarioResult",\n  "customDimensions": {\n      "appPlatformVersion": "0.0.1.0",\n      "appVersion": "1.7.02377.1059",\n      "clientId": "demo-vm02",\n      "executionProfileName": "PERF-CPU-OPENSSL.json",\n      "executionProfilePath": "/home/junovmadmin/VirtualClient/content/linux-x64/profiles/PERF-CPU-OPENSSL.json",\n      "executionSystem": null,\n      "experimentId": "416dccea-1745-4c13-9a5d-558e87aea533",\n      "metricCategorization": "",\n      "metricDescription": "",\n      "metricMetadata": {},\n      "metricName": "md5 256-byte",\n      "metricRelativity": "HigherIsBetter",\n      "metricUnit": "kilobytes/sec",\n      "metricValue": 468409.66,\n      "platformArchitecture": "linux-x64",\n      "scenarioArguments": "speed -multi 2 -elapsed -seconds 100 md5",\n      "scenarioEndTime": "2023-08-10T22:34:41.4631165Z",\n      "scenarioName": "OpenSSL Speed",\n      "scenarioStartTime": "2023-08-10T22:24:41.4456628Z",\n      "tags": "CPU,OpenSSL,Cryptography",\n      "toolName": "OpenSSL",\n      "toolResults": "",\n      "toolVersion": "",\n      "metadata": {\n          "experimentId": "416dccea-1745-4c13-9a5d-558e87aea533",\n          "agentId": "demo-vm02"\n      },\n      "metadata_dependencies": { \n          "package_openssl": "openssl.3.0.0.zip"\n      },\n      "metadata_host": {\n          "computerName": "demo-vm02",\n          "osFamily": "Unix",\n          "osName": "Ubuntu",\n          "osDescription": "Unix 5.15.0.1041",\n          "osVersion": "5.15.0.1041",\n          "osPlatformArchitecture": "linux-x64",\n          "cpuArchitecture": "X64",\n          "cpuSockets": 1,\n          "cpuPhysicalCores": 1,\n          "cpuPhysicalCoresPerSocket": 1,\n          "cpuLogicalProcessors": 2,\n          "cpuLogicalProcessorsPerCore": 2,\n          "numaNodes": 1,\n          "cpuCacheBytes_L1i": 32768,\n          "cpuCacheBytes_L1d": 49152,\n          "cpuCacheBytes_L1": 81920,\n          "cpuCacheBytes_L3": 50331648,\n          "cpuLastCacheBytes": 50331648,\n          "memoryBytes": 8078536,\n          "parts": [\n              {\n                  "type": "CPU",\n                  "vendor": "Intel",\n                  "description": "Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz Family 6 Model 106 Stepping 6, GenuineIntel",\n                  "family": "6",\n                  "model": "Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz",\n                  "stepping": "6",\n              },\n              {\n                  "type": "Network",\n                  "vendor": "Mellanox",\n                  "description": "Mellanox Technologies MT27800 Family [ConnectX-5 Virtual Function] (rev 80)"\n              }\n          ]\n      },\n      "metadata_runtime": {\n          "exitWait": "00:30:00",\n          "layout": null,\n          "logToFile": false,\n          "iterations": 3,\n          "profiles": "PERF-CPU-OPENSSL.json",\n          "timeout": null,\n          "timeoutScope": null,\n          "scenarios": null\n      },\n      "metadata_scenario": {\n          "scenario": "MD5",\n          "commandArguments": "speed -elapsed -seconds 100 md5",\n          "packageName": null,\n          "tags": "CPU,OpenSSL,Cryptography",\n          "profileIteration": 1,\n          "profileIterationStartTime": "2023-08-10T22:24:41.4182226Z",\n          "toolName": "OpenSSL Speed",\n          "toolArguments": "/home/junovmadmin/VirtualClient/content/linux-x64/packages/openssl.3.0.0/linux-x64/bin/openssl speed -multi 2 -elapsed -seconds 100 md5",\n          "toolVersion": null,\n          "packageVersion": null\n      }\n   }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example Metadata/Telemetry from Virtual Machine System"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "2023-08-08T23:51:19.0305451Z",\n  "level": "Information",\n  "message": "CoreMark.ScenarioResult",\n  "customDimensions": {\n      "appPlatformVersion": "0.0.1.0",\n      "appVersion": "1.7.02377.1059",\n      "clientId": "demo-vm02",\n      "executionProfileName": "PERF-CPU-COREMARK.json",\n      "executionProfilePath": "/home/junovmadmin/VirtualClient/content/linux-x64/profiles/PERF-CPU-COREMARK.json",\n      "executionSystem": null,\n      "experimentId": "6d87917a-abd4-4cdc-aa89-58ead3fa5c66",\n      "metricCategorization": "",\n      "metricDescription": "",\n      "metricMetadata": {},\n      "metricName": "Iterations/Sec",\n      "metricRelativity": "HigherIsBetter",\n      "metricUnit": "iterations/sec",\n      "metricValue": 25151.959757,\n      "platformArchitecture": "linux-x64",\n      "scenarioArguments": "XCFLAGS=\\"-DMULTITHREAD=2 -DUSE_PTHREAD\\" REBUILD=1 LFLAGS_END=-pthread",\n      "scenarioEndTime": "2023-08-08T23:51:19.0036861Z",\n      "scenarioName": "CoreMark",\n      "scenarioStartTime": "2023-08-08T23:50:18.3523003Z",\n      "tags": "",\n      "toolName": "CoreMark",\n      "toolVersion": "",\n      "metadata": {\n          "experimentId": "6d87917a-abd4-4cdc-aa89-58ead3fa5c66",\n          "agentId": "demo-vm02"\n      },\n      "metadata_dependencies": {\n          "compilerVersion_cc":"10.5.0",\n          "compilerVersion_gcc":"10.5.0",\n          "compilerVersion_gfortran":"10.5.0",\n      },\n      "metadata_host": {\n          "computerName": "demo-vm02",\n          "cpuArchitecture": "X64",\n          "cpuSockets": 1,\n          "cpuPhysicalCores": 1,\n          "cpuPhysicalCoresPerSocket": 1,\n          "cpuLogicalProcessors": 2,\n          "cpuLogicalProcessorsPerCore": 2,\n          "cpuCacheBytes_L1i": 32768,\n          "cpuCacheBytes_L1d": 49152,\n          "cpuCacheBytes_L1": 81920,\n          "cpuCacheBytes_L3": 50331648,\n          "cpuLastCacheBytes": 50331648,\n          "memoryBytes": 8078536,\n          "numaNodes": 1,\n          "osFamily": "Unix",\n          "osName": "Ubuntu",\n          "osDescription": "Unix 5.15.0.1041",\n          "osVersion": "5.15.0.1041",\n          "osPlatformArchitecture": "linux-x64",\n          "parts": [\n              {\n                  "type": "CPU",\n                  "vendor": "Intel",\n                  "description": "Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz Family 6 Model 106 Stepping 6, GenuineIntel",\n                  "family": "6",\n                  "model": "Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz",\n                  "stepping": "6",\n              },\n              {\n                  "type": "Network",\n                  "vendor": "Mellanox",\n                  "description": "Mellanox Technologies MT27800 Family [ConnectX-5 Virtual Function] (rev 80)"\n              }\n          ]\n      },\n      "metadata_runtime": {\n          "exitWait": "00:30:00",\n          "layout": null,\n          "logToFile": false,\n          "iterations": 3,\n          "profiles": "PERF-CPU-COREMARK.json,",\n          "timeout": null,\n          "timeoutScope": null,\n          "scenarios": null\n      },\n      "metadata_scenario": {\n          "scenario": "ExecuteCoremarkBenchmark",\n          "packageName": "coremark",\n          "threadCount": null,\n          "profileIteration": 1,\n          "profileIterationStartTime": "2023-08-08T23:50:18.3340033Z",\n          "toolName": "CoreMark",\n          "toolArguments": "XCFLAGS=\\"-DMULTITHREAD=2 -DUSE_PTHREAD\\" REBUILD=1 LFLAGS_END=-pthread",\n          "toolVersion": null,\n          "packageVersion": null\n      }\n   }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Example Metadata/Telemetry from Virtual Machine System"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "timestamp": "2023-08-08T23:51:19.0305451Z",\n  "level": "Information",\n  "message": "Superbench.ScenarioResult",\n  "customDimensions": {\n      "appPlatformVersion": "0.0.1.0",\n      "appVersion": "1.7.02377.1059",\n      "clientId": "demo-vm02",\n      "executionProfileName": "PERF-GPU-SUPERBENCH.json",\n      "executionProfilePath": "/home/junovmadmin/VirtualClient/content/linux-x64/profiles/PERF-GPU-SUPERBENCH.json",\n      "executionSystem": null,\n      "experimentId": "6d87917a-abd4-4cdc-aa89-58ead3fa5c66",\n      "metricCategorization": "default.yaml",\n      "metricDescription": "",\n      "metricMetadata": {},\n      "metricName": "resnet_models/pytorch-resnet101/fp16_train_step_time",\n      "metricRelativity": "Undefined",\n      "metricUnit": "",\n      "metricValue": "576.05609750747681",\n      "operatingSystemPlatform": "Unix",\n      "platformArchitecture": "linux-x64",\n      "profileFriendlyName": "SuperBenchmark GPU Performance Workload",\n      "scenarioArguments": "run --host-list localhost -c default.yaml",\n      "scenarioEndTime": "2023-08-16T03:52:31.1568631Z",\n      "scenarioName": "SuperBenchmark",\n      "scenarioStartTime": "2023-08-16T03:19:56.9093053Z",\n      "tags": "",\n      "toolName": "SuperBenchmark",\n      "toolVersion": ""\n      "metadata": {\n          "experimentId": "6d87917a-abd4-4cdc-aa89-58ead3fa5c66",\n          "agentId": "demo-vm02"\n      },\n      "metadata_dependencies": { \n          "gpuVendor": "Nvidia",\n          "gpuDriverVersion": "525",\n          "cudaVersion": "12.0",\n      },\n      "metadata_host": {\n          "computerName": "demo-vm02",\n          "cpuArchitecture": "X64",\n          "cpuSockets": 1,\n          "cpuPhysicalCores": 1,\n          "cpuPhysicalCoresPerSocket": 1,\n          "cpuLogicalProcessors": 2,\n          "cpuLogicalProcessorsPerCore": 2,\n          "cpuCacheBytes_L1i": 32768,\n          "cpuCacheBytes_L1d": 49152,\n          "cpuCacheBytes_L1": 81920,\n          "cpuCacheBytes_L3": 50331648,\n          "cpuLastCacheBytes": 50331648,\n          "memoryBytes": 8078536,\n          "numaNodes": 1,\n          "osFamily": "Unix",\n          "osName": "Ubuntu",\n          "osDescription": "Unix 5.15.0.1041",\n          "osVersion": "5.15.0.1041",\n          "osPlatformArchitecture": "linux-x64",\n          "parts": [\n              {\n                  "type": "CPU",\n                  "vendor": "Intel",\n                  "description": "Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz Family 6 Model 106 Stepping 6, GenuineIntel",\n                  "family": "6",\n                  "model": "Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz",\n                  "stepping": "6",\n              },\n              {\n                  "type": "Network",\n                  "vendor": "Mellanox",\n                  "description": "Mellanox Technologies MT27800 Family [ConnectX-5 Virtual Function] (rev 80)"\n              }\n          ]\n      },\n      "metadata_runtime": {\n          "exitWait": "00:30:00",\n          "layout": null,\n          "logToFile": false,\n          "iterations": 3,\n          "profiles": "PERF-GPU-SUPERBENCH.json,",\n          "timeout": null,\n          "timeoutScope": null,\n          "scenarios": null\n      },\n      "metadata_scenario": {\n          "scenario": "ExecuteCoremarkBenchmark",\n          "packageName": "coremark",\n          "threadCount": null,\n          "profileIteration": 1,\n          "profileIterationStartTime": "2023-08-08T23:50:18.3340033Z",\n          "toolName": "CoreMark",\n          "toolArguments": "XCFLAGS=\\"-DMULTITHREAD=2 -DUSE_PTHREAD\\" REBUILD=1 LFLAGS_END=-pthread",\n          "toolVersion": null,\n          "packageVersion": null\n      }\n   }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"log-files",children:"Log Files"}),"\n",(0,i.jsxs)(n.p,{children:["The Virtual Client emits ALL data/telemetry captured from workloads, monitors and from the system to standard log files. Log files can be found\nin the ",(0,i.jsx)(n.strong,{children:"logs"})," directory within the Virtual Client application's parent directory itself. This directory can be defined/overridden on the command line using\nthe ",(0,i.jsx)(n.code,{children:"--log-dir"})," option if desired. Logs are separated into the following categories:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Traces"}),(0,i.jsx)(n.br,{}),"\n","Operational traces about everything the Virtual Client is doing while running useful for debugging/triage purposes."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Metrics"}),(0,i.jsx)(n.br,{}),"\n","Important measurements captured from the workload and the system that can be used to analyze the performance and reliability of the workload and correspondingly\nthe system on which it is running. CSV-formatted log files are also produced by default for convenient viewing with spreadsheet applications."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Events"}),(0,i.jsx)(n.br,{}),"\n","Important events that happen on the system (e.g. event logs, system logs, SEL). Events can represent key system validation data points such as boot times,\nhardware or system faults or even just the output of useful toolsets (e.g. lspci, lshw, msinfo32)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"metrics-log-file-schema-and-requirements",children:"Metrics Log File Schema and Requirements"}),"\n",(0,i.jsx)(n.p,{children:"Metrics logged in a supported format (by any application) allow for telemetry/data to be uploaded to cloud resources such as Event Hubs for integration with larger\nscale data analysis scenarios (see the sections at the bottom of this document). It is also important to note that this same process can be used with other toolsets/automation for integration\ninto the same cloud data pipeline (e.g. log files generated from a Python script)."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example Data:"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.img,{alt:"Example OpenSSL Metrics",src:t(9377).A+"",width:"1585",height:"178"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Basic Requirements"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Metrics log files must have the file extension ",(0,i.jsx)(n.code,{children:"*.metrics"})," (e.g. custom_telemetry.metrics)."]}),"\n",(0,i.jsxs)(n.li,{children:["ALL date/time values should be in ",(0,i.jsx)(n.a,{href:"https://www.iso.org/iso-8601-date-and-time-format.html",children:"ISO 8601 (universal round-trip)"})," format (e.g. 2024-05-21T15:55:35.379Z)."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Part A Fields"}),(0,i.jsx)(n.br,{}),"\n","Fields that are fundamental to all telemetry data points."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"appHost"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The name of the system or machine on which the telemetry is captured."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"appName"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The name of the application/software that produced the telemetry."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"appVersion"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The version of the application."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"severityLevel"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The severity level of the metric. Supported Values = 0 (Trace), 1 (Debug), 2 (Information), 3 (Warning), 4 (Error), 5 (Critical)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"timestamp"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsxs)(n.td,{children:["The date/time at which the data point was captured. This should be should be formatted as an ",(0,i.jsx)(n.a,{href:"https://www.iso.org/iso-8601-date-and-time-format.html",children:"ISO 8601 (universal round-trip)"})," value (e.g. 2024-05-21T15:55:35.379Z)."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"operationId"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsxs)(n.td,{children:["An optional GUID identifier that can be used to identify subsets of operations within a full execution for fine-grained correlation. For example, given 5 different steps/operations executed, each one of these might be assigned a unique operation ID so each operation is distinguishable in telemetry. Default = empty GUID.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"experiment ID 1 -> (operation ID 1 + operation ID 2 + operation ID 3 + operation ID 4)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"operationParentId"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsxs)(n.td,{children:["An optional GUID identifier that can be used to identify/group multiple steps/operations together for correlation in telemetry. This concept is similar to that of the operation ID but provides an additional level of hierarchy if desired. Default = empty GUID.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"experiment ID 1 -> operation parent ID 1 -> (operation ID 1 + operation ID 2)",(0,i.jsx)("br",{}),"experiment ID 1 -> operation parent ID 2 -> (operation ID 3 + operation ID 4)"]})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Part B and C Fields"}),(0,i.jsx)(n.br,{}),"\n","Fields that are part of the custom dimensions."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"clientId"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"A unique identifier for the application (as a client running on the system). Note that there can be more than one running on a system and this enables a way to distinguish one instance of an application from another. This might simply be the system/machine name similar to 'appHost' if distinguishing between different instances of the same application running is not required."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"executionProfile"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsxs)(n.td,{children:["An identifier for the application/software end-to-end workflow. Virtual Client defines the entirety of a workflow (actions, monitors, dependency installation) using files called ",(0,i.jsx)(n.a,{href:"https://microsoft.github.io/VirtualClient/docs/guides/0011-profiles/",children:"Profiles"}),". Although an application external to Virtual Client may not use a file to describe the workflow expectations, the same concept can be applied (i.e. it does not need to be a JSON name)."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"experimentId"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:'The fundamental correlation identifier for Virtual Client, the experiment ID is a unique identifier that can be used to group all telemetry together for a given execution of the application. Note that the determination of what defines an "experiment" is up to the user. The user might prefer to have each individual execution of the application have a unique ID. The user might also prefer to aggregate any number of executions together as "1 experiment" and thus would use the same experiment ID across those different runs. Either of these preferences readily serve a wide range of automation process telemetry correlation needs.'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metricName"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The name of the metric."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metricRelativity"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"Describes whether higher or lower values indicate better outcomes. Supported values = Undefined, HigherIsBetter, LowerIsBetter."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metricValue"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The value for the metric."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"operatingSystemPlatform"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The OS platform. Supported values = Unix, Win32NT."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"scenario"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"A name for the scenario being conducted that produced the metric. Certain workloads for example can be executed in different ways but produce metrics that have the same name. The scenario name allows for a way to distinguish one set of metrics produced from another (e.g. fio_write_4k_block_size, fio_write_8k_block_size, fio_write_256K_block_size)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"scenarioEndTime"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsxs)(n.td,{children:["The date/time at which the step/operation that produced the metric ended/completed. This should be should be formatted as an ",(0,i.jsx)(n.a,{href:"https://www.iso.org/iso-8601-date-and-time-format.html",children:"ISO 8601 (universal round-trip)"})," value (e.g. 2024-05-21T15:55:35.376Z)."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"scenarioStartTime"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsxs)(n.td,{children:["The date/time at which the step/operation that produced the metric started/began. This should be should be formatted as an ",(0,i.jsx)(n.a,{href:"https://www.iso.org/iso-8601-date-and-time-format.html",children:"ISO 8601 (universal round-trip)"})," value (e.g. 2024-05-21T15:55:35.376Z)."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"toolset"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The name of the system feature or 3rd-party toolset/software that produce the metric. For example, the application might execute the 'OpenSSL' toolset to evaluate the performance of the system for cryptographic operations."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"executionSystem"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:'Describes the name of the execution/automation system running the application. This allows for distinguishing between different "automation harnesses" running the same application.'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metadata"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A set of additional metadata (key/value pairs) to include in telemetry. Note that this field should be in a simple dictionary format."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metadata_host"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A set of additional metadata specifically related to the host system (key/value pairs) to include in telemetry. Note that this field should be in a simple dictionary format."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metricCategorization"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Describes a category for the type of metric (e.g. Cryptographic Operations)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metricDescription"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A description of the metric."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metricUnit"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"The unit of measurement for the metric (e.g. kilobytes/sec). Lower-casing is recommended for consistency."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metricVerbosity"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Allows the user to ascribe different levels of priority/verbosity to a set of metrics that can be used for queries/filtering. Lower values indicate higher priority. For example, metrics considered to be the most critical for decision making would be set with verbosity = 0 (Critical). Default = 1 (Standard). Supported Values = 0 (Critical), 1 (Standard), 2 (Informational), etc..."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"platformArchitecture"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"The OS platform + CPU architecture. Supported values = linux-arm64, linux-x64, win-arm64, win-x64."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A semi-colon delimited list of tags to associate with the metric for enhancing queryability of the data at-scale."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"toolsetResults"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"Output from the 3rd-party toolset/software. Note that there are often size restrictions on cloud messaging systems. It is recommended that the size of the toolset results be kept to a minimum having only highly useful information."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"toolsetVersion"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"The version of the system feature or 3rd-party toolset/software that produced the metric."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"The following example illustrates the schema requirements for the various supported log file formats:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"JSON Schema and Requirements"}),(0,i.jsx)(n.br,{}),"\n","The example below illustrates the supported JSON format for log files. Each JSON data point/fragment should be separated from the next using a ",(0,i.jsx)(n.code,{children:"-----"})," delimiter as is shown in\nthe example."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    # Part A Fields\n    "appHost": "linux-demo01",\n    "appName": "PerfCheck",\n    "appVersion": "1.5.0",\n    "operationId": "98733b6a-9a19-4c50-85ce-9ef95f74b79c",\n    "operationParentId": "8c3956be-54cd-456c-b784-06f41730f8fc",\n    "severityLevel": 2,\n    "timestamp": "2025-07-23T20:34:48.6439102Z",\n\n    # Part B/C Fields (Custom Dimensions)\n    "clientId": "linux-demo01-client-01",\n    "executionProfile": "METIS-CPU-CRYPTOGRAPHIC",\n    "executionSystem": "Metis",\n    "experimentId": "6c83d269-2dff-4fb5-9924-375d84602c5b",\n    "metadata": {\n        "groupId": "Group A",\n        "intent": "System Pre-Check",\n        "owner": "metis-support@company.com",\n        "revision": "2.6"\n    },\n    "metadata_host": {\n        "osDescription": "Unix 6.11.0.1013",\n        "osFamily": "Unix",\n        "osName": "Ubuntu 24.04.2 LTS",\n    },\n    "metricCategorization": "Cryptographic Operations",\n    "metricDescription": "SHA256 algorithm operation rate",\n    "metricName": "sha256 16-byte",\n    "metricRelativity": "HigherIsBetter",\n    "metricUnit": "kilobytes/sec",\n    "metricValue": "4530442.74",\n    "metricVerbosity": 0,\n    "operatingSystemPlatform": "Unix",\n    "platformArchitecture": "linux-x64",\n    "scenario": "sha256",\n    "scenarioEndTime": "2025-07-23T20:34:48.6298225Z",\n    "scenarioStartTime": "2025-07-23T20:24:48.6170306Z",\n    "tags": "CPU;OpenSSL;Cryptography",\n    "toolset": "OpenSSL",\n    "toolsetResults": "version: 3.0.0-beta3-dev\\nbuilt on: Fri Aug 13 03:16:55 2021 UTC\\noptions: bn(64,64)\\ncompiler: gcc -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG\\nCPUINFO: OPENSSL_ia32cap=0xfffa32235f8bffff:0x415f46f1bf2fbb\\nsha256         4530442.74 15234880.42",\n    "toolsetVersion": "3.0.0"\n}\n-----\n{\n    "appHost": "linux-demo01",\n    "appName": "PerfCheck",\n    "appVersion": "1.5.0",\n    "operationId": "98733b6a-9a19-4c50-85ce-9ef95f74b79c",\n    "operationParentId": "8c3956be-54cd-456c-b784-06f41730f8fc",\n    "severityLevel": 2,\n    "timestamp": "2025-07-23T20:34:48.6439102Z",\n    "clientId": "linux-demo01-client-01",\n    "executionProfile": "METIS-CPU-CRYPTOGRAPHIC",\n    "executionSystem": "Metis",\n    "experimentId": "6c83d269-2dff-4fb5-9924-375d84602c5b",\n    "metadata": {\n        "groupId": "Group A",\n        "intent": "System Pre-Check",\n        "owner": "metis-support@company.com",\n        "revision": "2.6",\n    },\n    "metadata_host": {\n        "osDescription": "Unix 6.11.0.1013",\n        "osFamily": "Unix",\n        "osName": "Ubuntu 24.04.2 LTS",\n    },\n    "metricCategorization": "Cryptographic Operations",\n    "metricDescription": "SHA256 algorithm operation rate",\n    "metricName": "sha256 64-byte",\n    "metricRelativity": "HigherIsBetter",\n    "metricUnit": "kilobytes/sec",\n    "metricValue": "15234880.42",\n    "metricVerbosity": 0,\n    "operatingSystemPlatform": "Unix",\n    "platformArchitecture": "linux-x64",\n    "scenario": "sha256",\n    "scenarioEndTime": "2025-07-23T20:34:48.6298225Z",\n    "scenarioStartTime": "2025-07-23T20:24:48.6170306Z",\n    "tags": "CPU;OpenSSL;Cryptography",\n    "toolset": "OpenSSL",\n    "toolsetResults": "version: 3.0.0-beta3-dev\\nbuilt on: Fri Aug 13 03:16:55 2021 UTC\\noptions: bn(64,64)\\ncompiler: gcc -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG\\nCPUINFO: OPENSSL_ia32cap=0xfffa32235f8bffff:0x415f46f1bf2fbb\\nsha256         4530442.74 15234880.42",\n    "toolsetVersion": "3.0.0"\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"YAML Schema and Requirements"}),(0,i.jsx)(n.br,{}),"\n","The example below illustrates the supported YAML format for log files. YAML produces fairly human-readable log file content while remaining structured.\nEach YAML data point/fragment should be separated from the next using a ",(0,i.jsx)(n.code,{children:"-----"})," delimiter as is shown in the example. It is recommended that you use a ",(0,i.jsx)(n.a,{href:"https://www.yaml.info/learn/quote.html",children:"block scalar"}),"\nto represent blocks of string/text values (especially large blocks of text) to prevent parsing issues when YAML reserved characters (e.g. colon characters) exist in the values.\nSee the ",(0,i.jsx)(n.a,{href:"https://www.yaml.info/learn/quote.html",children:"YAML info documentation"})," for reference."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Part A Fields\nappHost: linux-demo01\nappName: PerfCheck\nappVersion: 1.5.0\noperationId: 98733b6a-9a19-4c50-85ce-9ef95f74b79c\noperationParentId: 8c3956be-54cd-456c-b784-06f41730f8fc\nseverityLevel: 2\ntimestamp: 2025-07-23T20:34:48.6439102Z   \n\n# Part B/C Fields (Custom Dimensions)\nclientId: linux-demo01-client-01\nexecutionProfile: METIS-CPU-CRYPTOGRAPHIC\nexecutionSystem: Metis\nexperimentId: 6c83d269-2dff-4fb5-9924-375d84602c5b\nmetadata:\n  groupId: Group A\n  intent: System Pre-Check\n  owner: metis-support@company.com\n  revision: 2.6\nmetadata_host:\n  osDescription: Unix 6.11.0.1013\n  osFamily: Unix\n  osName: Ubuntu 24.04.2 LTS\nmetricCategorization: Cryptographic Operations\nmetricDescription: SHA256 algorithm operation rate\nmetricName: sha256 16-byte\nmetricRelativity: HigherIsBetter\nmetricUnit: kilobytes/sec\nmetricValue: 4530442.74\nmetricVerbosity: 0\noperatingSystemPlatform: Unix\nplatformArchitecture: linux-x64\nscenario: sha256\nscenarioEndTime: 2025-07-23T20:34:48.6298225Z\nscenarioStartTime: 2025-07-23T20:24:48.6170306Z\ntags: CPU;OpenSSL;Cryptography\ntoolset: OpenSSL\n\n# using a 'block scalar' to encapsulate a block of text that contains\n# reserved characters\ntoolsetResults: |\n  version: 3.0.0-beta3-dev\n  built on: Fri Aug 13 03:16:55 2021 UTC\n  options: bn(64,64) \n  compiler: gcc -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG\n  CPUINFO: OPENSSL_ia32cap=0xfffa32235f8bffff:0x415f46f1bf2fbb\n  sha256         4530442.74 15234880.42\ntoolsetVersion: 3.0.0\n-----\nappHost: linux-demo01\nappName: PerfCheck\nappVersion: 1.5.0\noperationId: 98733b6a-9a19-4c50-85ce-9ef95f74b79c\noperationParentId: 8c3956be-54cd-456c-b784-06f41730f8fc\nseverityLevel: 2\ntimestamp: 2025-07-23T20:34:48.6439102Z\nclientId: linux-demo01-client-01\nexecutionProfile: METIS-CPU-CRYPTOGRAPHIC\nexecutionSystem: Metis\nexperimentId: 6c83d269-2dff-4fb5-9924-375d84602c5b\nmetadata:\n  groupId: Group A\n  intent: System Pre-Check\n  owner: metis-support@company.com\n  revision: 2.6\nmetadata_host:\n  osDescription: Unix 6.11.0.1013\n  osFamily: Unix\n  osName: Ubuntu 24.04.2 LTS\nmetricCategorization: Cryptographic Operations\nmetricDescription: SHA256 algorithm operation rate\nmetricName: sha256 64-byte\nmetricRelativity: HigherIsBetter\nmetricUnit: kilobytes/sec\nmetricValue: 15234880.42\nmetricVerbosity: 0\noperatingSystemPlatform: Unix\nplatformArchitecture: linux-x64\nscenario: sha256\nscenarioEndTime: 2025-07-23T20:34:48.6298225Z\nscenarioStartTime: 2025-07-23T20:24:48.6170306Z\ntags: CPU;OpenSSL;Cryptography\ntoolset: OpenSSL\ntoolsetResults: |\n  version: 3.0.0-beta3-dev\n  built on: Fri Aug 13 03:16:55 2021 UTC\n  options: bn(64,64) \n  compiler: gcc -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG\n  CPUINFO: OPENSSL_ia32cap=0xfffa32235f8bffff:0x415f46f1bf2fbb\n  sha256         4530442.74 15234880.42\ntoolsetVersion: 3.0.0\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"CSV Schema and Requirements"}),(0,i.jsx)(n.br,{}),"\n",'The example below illustrates the supported CSV format for log files. CSV produces output that can be readily opened in a spreadsheet application such as Excel.\nThe first row in the CSV should contain the headers. They must be named exactly as reflected in the example below. That said, the headers are NOT case-sensitive. Each row\nthereafter should have the comma-delimited values. The "Metadata*" fields must be either semi-colon ',(0,i.jsx)(n.code,{children:";"})," delimited or triple-comma ",(0,i.jsx)(n.code,{children:",,,"})," delimited key/value pairs\n(e.g. Algorithm=SHA256;AlgorithmType=Encryption or Algorithm=SHA256,,,AlgorithmType=Encryption). The triple-comma delimiter should be used when there is the likelihood of conflicts in free-form text that can often have single\ncommas, semi-colons and other common character delimiters within. If any field values can contain commas, it is recommended to surround the values in quotation marks. Furthermore\nif those field values contain both commas and quotation marks, it is recommended to surround the values in single quotes. Beyond this, the problematic characters must be escaped/replaced\nbefore adding rows to a CSV file."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# First row are the headers. They may be ordered in any way that is preferable;\n# however, they must be named exactly as shown below. The headers are case-insentive.\nTimestamp,ExperimentID,ExecutionSystem,ExecutionProfile,ClientID,SeverityLevel,Toolset,ToolsetVersion,Scenario,ScenarioStartTime,ScenarioEndTime,MetricName,MetricValue,MetricDescription,MetricUnit,MetricCategorization,MetricRelativity,MetricVerbosity,AppHost,AppName,AppVersion,OperatingSystemPlatform,PlatformArchitecture,OperationID,OperationParentID,Metadata,Metadata_Host,ToolsetResults,Tags\n\n# Each row thereafter contains matching field values for a single metric.\n2025-07-23T20:34:48.6439102Z,6c83d269-2dff-4fb5-9924-375d84602c5b,Metis,METIS-CPU-CRYPTOGRAPHIC,linux-demo01-client-01,2,OpenSSL,3.0.0,sha256,2025-07-23T20:24:48.6170306Z,2025-07-23T20:34:48.6298225Z,sha256 16-byte,4530442.74,SHA256 algorithm operation rate,kilobytes/sec,Cryptographic Operations,HigherIsBetter,0,linux-demo01,PerfCheck,1.5.0,Unix,linux-x64,98733b6a-9a19-4c50-85ce-9ef95f74b79c,8c3956be-54cd-456c-b784-06f41730f8fc,"GroupId=Group A;Intent=System Pre-Check;Owner=metis-support@company.com;Revision=2.6","OsDescription=Unix 6.11.0.1013;OsFamily=Unix;OsName=Ubuntu 24.04.2 LTS","version: 3.0.0-beta3-dev\\nbuilt on: Fri Aug 13 03:16:55 2021 UTC\\noptions: bn(64,64)\\ncompiler: gcc -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG\\nCPUINFO: OPENSSL_ia32cap=0xfffa32235f8bffff:0x415f46f1bf2fbb\\nsha256         4530442.74 15234880.42",CPU;OpenSSL;Cryptography\n2025-07-23T20:34:48.6439102Z,6c83d269-2dff-4fb5-9924-375d84602c5b,Metis,METIS-CPU-CRYPTOGRAPHIC,linux-demo01-client-01,2,OpenSSL,3.0.0,sha256,2025-07-23T20:24:48.6170306Z,2025-07-23T20:34:48.6298225Z,sha256 64-byte,15234880.42,SHA256 algorithm operation rate,kilobytes/sec,Cryptographic Operations,HigherIsBetter,0,linux-demo01,PerfCheck,1.5.0,Unix,linux-x64,98733b6a-9a19-4c50-85ce-9ef95f74b79c,8c3956be-54cd-456c-b784-06f41730f8fc,"GroupId=Group A;Intent=System Pre-Check;Owner=metis-support@company.com;Revision=2.6","OsDescription=Unix 6.11.0.1013;OsFamily=Unix;OsName=Ubuntu 24.04.2 LTS","version: 3.0.0-beta3-dev\\nbuilt on: Fri Aug 13 03:16:55 2021 UTC\\noptions: bn(64,64)\\ncompiler: gcc -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG\\nCPUINFO: OPENSSL_ia32cap=0xfffa32235f8bffff:0x415f46f1bf2fbb\\nsha256         4530442.74 15234880.42",CPU;OpenSSL;Cryptography\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"events-log-file-schema-and-requirements",children:"Events Log File Schema and Requirements"}),"\n",(0,i.jsx)(n.p,{children:"Events logged in a supported format (by any application) allow for telemetry/data to be uploaded to cloud resources such as Event Hubs for integration with larger\nscale data analysis scenarios (see the sections at the bottom of this document). It is also important to note that this same process can be used with other toolsets/automation for integration\ninto the same cloud data pipeline (e.g. log files generated from a Python script)."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example Data:"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.img,{alt:"Example System Events",src:t(7095).A+"",width:"1582",height:"203"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Basic Requirements"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Events log files must have the file extension ",(0,i.jsx)(n.code,{children:"*.events"})," (e.g. custom_telemetry.events)."]}),"\n",(0,i.jsxs)(n.li,{children:["ALL date/time values should be in ",(0,i.jsx)(n.a,{href:"https://www.iso.org/iso-8601-date-and-time-format.html",children:"ISO 8601 (universal round-trip)"})," format (e.g. 2024-05-21T15:55:35.379Z)."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Part A Fields"}),(0,i.jsx)(n.br,{}),"\n","Fields that are fundamental to all telemetry data points."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"appHost"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The name of the system or machine on which the telemetry is captured."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"appName"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The name of the application/software that produced the telemetry."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"appVersion"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The version of the application."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"severityLevel"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The severity level of the event. Supported Values = 0 (Trace), 1 (Debug), 2 (Information), 3 (Warning), 4 (Error), 5 (Critical)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"timestamp"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsxs)(n.td,{children:["The date/time at which the data point was captured. This should be should be formatted as an ",(0,i.jsx)(n.a,{href:"https://www.iso.org/iso-8601-date-and-time-format.html",children:"ISO 8601 (universal round-trip)"})," value (e.g. 2024-05-21T15:55:35.379Z)."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"operationId"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsxs)(n.td,{children:["An optional GUID identifier that can be used to identify subsets of operations within a full execution for fine-grained correlation. For example, given 5 different steps/operations executed, each one of these might be assigned a unique operation ID so each operation is distinguishable in telemetry. Default = empty GUID.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"experiment ID 1 -> (operation ID 1 + operation ID 2 + operation ID 3 + operation ID 4)"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"operationParentId"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsxs)(n.td,{children:["An optional GUID identifier that can be used to identify/group multiple steps/operations together for correlation in telemetry. This concept is similar to that of the operation ID but provides an additional level of hierarchy if desired. Default = empty GUID.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),"experiment ID 1 -> operation parent ID 1 -> (operation ID 1 + operation ID 2)",(0,i.jsx)("br",{}),"experiment ID 1 -> operation parent ID 2 -> (operation ID 3 + operation ID 4)"]})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Part B and C Fields"}),(0,i.jsx)(n.br,{}),"\n","Fields that are part of the custom dimensions."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"clientId"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"A unique identifier for the application (as a client running on the system). Note that there can be more than one running on a system and this enables a way to distinguish one instance of an application from another. This might simply be the system/machine name similar to 'appHost' if distinguishing between different instances of the same application running is not required."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"executionProfile"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsxs)(n.td,{children:["An identifier for the application/software end-to-end workflow. Virtual Client defines the entirety of a workflow (actions, monitors, dependency installation) using files called ",(0,i.jsx)(n.a,{href:"https://microsoft.github.io/VirtualClient/docs/guides/0011-profiles/",children:"Profiles"}),". Although an application external to Virtual Client may not use a file to describe the workflow expectations, the same concept can be applied (i.e. it does not need to be a JSON name)."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"experimentId"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:'The fundamental correlation identifier for Virtual Client, the experiment ID is a unique identifier that can be used to group all telemetry together for a given execution of the application. Note that the determination of what defines an "experiment" is up to the user. The user might prefer to have each individual execution of the application have a unique ID. The user might also prefer to aggregate any number of executions together as "1 experiment" and thus would use the same experiment ID across those different runs. Either of these preferences readily serve a wide range of automation process telemetry correlation needs.'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"eventId"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"An identifier for the event (e.g. eventlog.journalctl)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"eventSource"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The source/provider of the event (e.g. journalctl)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"eventType"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The type of event (e.g. EventLog, SystemLog)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"operatingSystemPlatform"}),(0,i.jsx)(n.td,{children:"Yes"}),(0,i.jsx)(n.td,{children:"The OS platform. Supported values = Unix, Win32NT."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"eventCode"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A numeric code for the event where applicable."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"eventDescription"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A description of the event."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"eventInfo"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A set of properties (key/value pairs) that describes the details of the event. Note that this field should be in a simple dictionary format."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"executionSystem"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:'Describes the name of the execution/automation system running the application. This allows for distinguishing between different "automation harnesses" running the same application.'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metadata"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A set of additional metadata (key/value pairs) to include in telemetry. Note that this field should be in a simple dictionary format."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"metadata_host"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A set of additional metadata specifically related to the host system (key/value pairs) to include in telemetry. Note that this field should be in a simple dictionary format."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"platformArchitecture"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"The OS platform + CPU architecture. Supported values = linux-arm64, linux-x64, win-arm64, win-x64."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"tags"}),(0,i.jsx)(n.td,{children:"No"}),(0,i.jsx)(n.td,{children:"A semi-colon delimited list of tags to associate with the event for enhancing queryability of the data at-scale."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"The following example illustrates the schema requirements for the various supported log file formats:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"JSON Schema and Requirements"}),(0,i.jsx)(n.br,{}),"\n","The example below illustrates the supported JSON format for log files. Each JSON data point/fragment should be separated from the next using a ",(0,i.jsx)(n.code,{children:"-----"})," delimiter as is shown in\nthe example."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    # Part A Fields\n    "appHost": "linux-demo01",\n    "appName": "PerfCheck",\n    "appVersion": "1.5.0",\n    "operationId": "67ed977c-597b-41e8-b31e-b9b283ccaba5",\n    "operationParentId": "3c6ab4d3-a4e0-4ec0-975b-e1a7444397fd",\n    "severityLevel": 5,\n    "timestamp": "2025-07-31T20:05:26.7370850Z",\n\n    # Part B/C Fields (Custom Dimensions)\n    "clientId": "linux-demo01-client-01",\n    "executionProfile": "METIS-CPU-CRYPTOGRAPHIC",\n    "executionSystem": "Metis",\n    "experimentId": "b7b1e371-dea4-4597-81af-cd7a9ea25230",\n    "eventCode": 500,\n    "eventDescription": "Critical system event",\n    "eventId": "eventlog.journalctl",\n    "eventSource": "journalctl",\n    "eventType": "EventLog",\n    "eventInfo": {\n        "lastCheckPoint": "2025-07-31T20:01:40.0774251Z",\n        "message": "CRITICAL: Unexpected termination due to segmentation fault",\n        "priority": "2",\n        "bootId": "a1b2c3d4e5f6g7h8i9j0",\n        "exe": "/usr/bin/myapp1",\n        "unit": "myapp1.service"\n    },\n    "metadata": {\n        "groupId": "Group A",\n        "intent": "System Pre-Check",\n        "owner": "metis-support@company.com",\n        "revision": "2.6"\n    },\n    "metadata_host": {\n        "osDescription": "Unix 6.11.0.1013",\n        "osFamily": "Unix",\n        "osName": "Ubuntu 24.04.2 LTS",\n    },\n    "operatingSystemPlatform": "Unix",\n    "platformArchitecture": "linux-x64",\n    "tags": "Linux;EventLog"\n}\n-----\n{\n    "appHost": "linux-demo01",\n    "appName": "PerfCheck",\n    "appVersion": "1.5.0",\n    "operationId": "67ed977c-597b-41e8-b31e-b9b283ccaba5",\n    "operationParentId": "3c6ab4d3-a4e0-4ec0-975b-e1a7444397fd",\n    "severityLevel": 5,\n    "timestamp": "2025-07-31T20:05:26.7370850Z",\n    "clientId": "linux-demo01-client-01",\n    "executionProfile": "METIS-CPU-CRYPTOGRAPHIC",\n    "executionSystem": "Metis",\n    "experimentId": "b7b1e371-dea4-4597-81af-cd7a9ea25230",\n    "eventCode": 500,\n    "eventDescription": "Critical system event",\n    "eventId": "eventlog.journalctl",\n    "eventSource": "journalctl",\n    "eventType": "EventLog",\n    "eventInfo": {\n        "lastCheckPoint": "2025-07-31T20:01:40.0774251Z",\n        "message": "CRITICAL: Power supply unit failure detected on PSU1",\n        "priority": "2",\n        "bootId": "a1b2c3d4e5f6g7h8i9j0",\n        "exe": "/usr/lib/systemd/systemd",\n        "unit": "power-monitor.service"\n    },\n    "metadata": {\n        "groupId": "Group A",\n        "intent": "System Pre-Check",\n        "owner": "metis-support@company.com",\n        "revision": "2.6"\n    },\n    "metadata_host": {\n        "osDescription": "Unix 6.11.0.1013",\n        "osFamily": "Unix",\n        "osName": "Ubuntu 24.04.2 LTS",\n    },\n    "operatingSystemPlatform": "Unix",\n    "platformArchitecture": "linux-x64",\n    "tags": "Linux;EventLog"\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"YAML Schema and Requirements"}),(0,i.jsx)(n.br,{}),"\n","The example below illustrates the supported YAML format for log files. YAML produces fairly human-readable log file content while remaining structured.\nEach YAML data point/fragment should be separated from the next using a ",(0,i.jsx)(n.code,{children:"-----"})," delimiter as is shown in the example. It is recommended that you use a ",(0,i.jsx)(n.a,{href:"https://www.yaml.info/learn/quote.html",children:"block scalar"}),"\nto represent blocks of string/text values (especially large blocks of text) to prevent parsing issues when YAML reserved characters (e.g. colon characters) exist in the values.\nSee the ",(0,i.jsx)(n.a,{href:"https://www.yaml.info/learn/quote.html",children:"YAML info documentation"})," for reference."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Part A Fields\nappHost: linux-demo01\nappName: PerfCheck\nappVersion: 1.5.0\noperationId: 67ed977c-597b-41e8-b31e-b9b283ccaba5\noperationParentId: 3c6ab4d3-a4e0-4ec0-975b-e1a7444397fd\nseverityLevel: 5\ntimestamp: 2025-07-31T20:05:26.7370850Z\n\n# Part B/C Fields (Custom Dimensions)\nclientId: linux-demo01-client-01\nexecutionProfile: METIS-CPU-CRYPTOGRAPHIC\nexecutionSystem: Metis\nexperimentId: b7b1e371-dea4-4597-81af-cd7a9ea25230\neventCode: 500\neventDescription: Critical system event\neventId: eventlog.journalctl\neventSource: journalctl\neventType: EventLog\neventInfo:\n    lastCheckPoint: 2025-07-31T20:01:40.0774251Z\n    message: CRITICAL: Unexpected termination due to segmentation fault\n    priority: 2\n    bootId: a1b2c3d4e5f6g7h8i9j0\n    exe: /usr/bin/myapp1\n    unit: myapp1.service\nmetadata:\n    groupId: Group A\n    intent: System Pre-Check\n    owner: metis-support@company.com\n    revision: 2.6\nmetadata_host:\n    osDescription: Unix 6.11.0.1013\n    osFamily: Unix\n    osName: Ubuntu 24.04.2 LTS\noperatingSystemPlatform: Unix\nplatformArchitecture: linux-x64\ntags: Linux;EventLog\n-----\nappHost: linux-demo01\nappName: PerfCheck\nappVersion: 1.5.0\noperationId: 67ed977c-597b-41e8-b31e-b9b283ccaba5\noperationParentId: 3c6ab4d3-a4e0-4ec0-975b-e1a7444397fd\nseverityLevel: 5\ntimestamp: 2025-07-31T20:05:26.7370850Z\nclientId: linux-demo01-client-01\nexecutionProfile: METIS-CPU-CRYPTOGRAPHIC\nexecutionSystem: Metis\nexperimentId: b7b1e371-dea4-4597-81af-cd7a9ea25230\neventCode: 500\neventDescription: Critical system event\neventId: eventlog.journalctl\neventSource: journalctl\neventType: EventLog\neventInfo:\n    lastCheckPoint: 2025-07-31T20:01:40.0774251Z\n    message: CRITICAL: Power supply unit failure detected on PSU1\n    priority: 2\n    bootId: a1b2c3d4e5f6g7h8i9j0\n    exe: /usr/lib/systemd/systemd\n    unit: power-monitor.service\nmetadata:\n    groupId: Group A\n    intent: System Pre-Check\n    owner: metis-support@company.com\n    revision: 2.6\nmetadata_host:\n    osDescription: Unix 6.11.0.1013\n    osFamily: Unix\n    osName: Ubuntu 24.04.2 LTS\noperatingSystemPlatform: Unix\nplatformArchitecture: linux-x64\ntags: Linux;EventLog\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"CSV Schema and Requirements"}),(0,i.jsx)(n.br,{}),"\n",'The example below illustrates the supported CSV format for log files. CSV produces output that can be readily opened in a spreadsheet application such as Excel.\nThe first row in the CSV should contain the headers. They must be named exactly as reflected in the example below. That said, the headers are NOT case-sensitive. Each row\nthereafter should have the comma-delimited values. The "EventInfo" and "Metadata*" fields must be either semi-colon ',(0,i.jsx)(n.code,{children:";"})," delimited or triple-comma ",(0,i.jsx)(n.code,{children:",,,"})," delimited key/value pairs\n(e.g. Algorithm=SHA256;AlgorithmType=Encryption or Algorithm=SHA256,,,AlgorithmType=Encryption). The triple-comma delimiter should be used when there is the likelihood of conflicts in free-form text that can often have single\ncommas, semi-colons and other common character delimiters within. If any field values can contain commas, it is recommended to surround the values in quotation marks. Furthermore\nif those field values contain both commas and quotation marks, it is recommended to surround the values in single quotes. Beyond this, the problematic characters must be escaped/replaced\nbefore adding rows to a CSV file."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# First row are the headers. They may be ordered in any way that is preferable;\n# however, they must be named exactly as shown below. The headers are case-insentive.\nTimestamp,ExperimentID,ExecutionSystem,ExecutionProfile,ClientID,SeverityLevel,EventType,EventId,EventDescription,EventSource,EventCode,EventInfo,AppHost,AppName,AppVersion,OperatingSystemPlatform,PlatformArchitecture,OperationID,OperationParentID,Metadata,Metadata_Host,Tags\n\n# Each row thereafter contains matching field values for a single metric.\n2025-07-31T20:05:26.7370850Z,b7b1e371-dea4-4597-81af-cd7a9ea25230,Metis,METIS-CPU-CRYPTOGRAPHIC,linux-demo01-client-01,5,EventLog,eventlog.journalctl,Critical system event,journalctl,500,"LastCheckPoint=2025-07-31T20:01:40.0774251Z,,,Message=CRITICAL: Unexpected termination due to segmentation fault,,,Priority=2,,,BootId=a1b2c3d4e5f6g7h8i9j0,,,Exe=/usr/bin/myapp1,,,Unit=myapp1.service",linux-demo01,PerfCheck,1.5.0,Unix,linux-x64,98733b6a-9a19-4c50-85ce-9ef95f74b79c,8c3956be-54cd-456c-b784-06f41730f8fc,"GroupId=Group A;Intent=System Pre-Check;Owner=metis-support@company.com;Revision=2.6","OsDescription=Unix 6.11.0.1013;OsFamily=Unix;OsName=Ubuntu 24.04.2 LTS",Linux;EventLog\n2025-07-31T20:05:26.7370850Z,b7b1e371-dea4-4597-81af-cd7a9ea25230,Metis,METIS-CPU-CRYPTOGRAPHIC,linux-demo01-client-01,5,EventLog,eventlog.journalctl,Critical system event,journalctl,500,"LastCheckPoint=2025-07-31T20:01:40.0774251Z,,,Message=CRITICAL: Power supply unit failure detected on PSU1,,,Priority=2,,,BootId=a1b2c3d4e5f6g7h8i9j0,,,Exe=/usr/lib/systemd/systemd,,,Unit=power-monitor.service",linux-demo01,PerfCheck,1.5.0,Unix,linux-x64,98733b6a-9a19-4c50-85ce-9ef95f74b79c,8c3956be-54cd-456c-b784-06f41730f8fc,"GroupId=Group A;Intent=System Pre-Check;Owner=metis-support@company.com;Revision=2.6","OsDescription=Unix 6.11.0.1013;OsFamily=Unix;OsName=Ubuntu 24.04.2 LTS",Linux;EventLog\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"larger-scale-scenarios",children:"Larger-Scale Scenarios"}),"\n",(0,i.jsx)(n.p,{children:'For larger-scale scenarios where the Virtual Client may be ran on many systems for long periods of time each producing a lot of data/telemetry. In these\nscenarios, it is not that easy to gather log files from systems and to parse out the meaningful information from them required to analyze the performance\nand reliability of the systems. Virtual Client supports options to integrate with "big data" cloud resources for these type of scenarios.'}),"\n",(0,i.jsx)(n.h3,{id:"azure-event-hubs-support",children:"Azure Event Hubs Support"}),"\n",(0,i.jsx)(n.p,{children:"Azure Event Hubs is a large-scale messaging platform available in the Azure cloud. The platform integrates with other data storage and analytics resources\nsuch as Azure Data Explorer/Kusto and Azure Storage Accounts. This makes Event Hubs a very nice option for emitting data/telemetry from the operations\nof the Virtual Client. Event Hubs can support both the scale and the need to aggregate/consolidate the data so that it can be readily analyzed. The Virtual Client\nallows users to request data/telemetry be sent to a set of Event Hubs by supplying the connection string to the Event Hub Namespace on the command line."}),"\n",(0,i.jsx)(n.p,{children:"See the following documentation for more information:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/VirtualClient/docs/guides/0610-integration-event-hub",children:"Event Hubs Integration"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"azure-storage-account-support",children:"Azure Storage Account Support"}),"\n",(0,i.jsx)(n.p,{children:"An Azure Storage Account is a large-scale file/blob storage platform available in the Azure cloud. The platform is one of the most fundamental resources available\nin the Azure cloud and it integrates with many other resources such as Azure Data Factory. The Virtual Client allows users to request files and logs content to\nbe uploaded to a Storage Account by passing in a connection string or a SAS URI to the Storage Account on the command line."}),"\n",(0,i.jsx)(n.p,{children:"See the following documentation for more information:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/VirtualClient/docs/guides/0600-integration-blob-storage",children:"Storage Account Integration"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7095:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/eventlog_events_example-2adc72e77b27edafff3f54584423551b.png"},9377:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/openssl_metrics_example-7d8f06c87d1590bf7fce9ba3c6fc502b.png"},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);
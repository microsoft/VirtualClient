"use strict";(self.webpackChunkvirtualclient=self.webpackChunkvirtualclient||[]).push([[8010],{5075:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>s});var i=t(5893),r=t(3905);const o={},c="Getting Started (Docker)",a={id:"guides/0003-getting-started-docker",title:"Getting Started (Docker)",description:"In this document, we are going to run OpenSSL workload in a Docker Container.",source:"@site/docs/guides/0003-getting-started-docker.md",sourceDirName:"guides",slug:"/guides/0003-getting-started-docker",permalink:"/VirtualClient/docs/guides/0003-getting-started-docker",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/VirtualClient/edit/main/website/docs/guides/0003-getting-started-docker.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Started (Client/Server)",permalink:"/VirtualClient/docs/guides/0002-getting-started-client-server"},next:{title:"Command Line Options",permalink:"/VirtualClient/docs/guides/0010-command-line"}},l={},s=[{value:"Build container",id:"build-container",level:2},{value:"Start container",id:"start-container",level:2},{value:"Read console logs",id:"read-console-logs",level:2},{value:"Congratulations !!",id:"congratulations-",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.ah)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"getting-started-docker",children:"Getting Started (Docker)"}),"\n",(0,i.jsx)(n.p,{children:"In this document, we are going to run OpenSSL workload in a Docker Container."}),"\n",(0,i.jsx)(n.h2,{id:"build-container",children:"Build container"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"VirtualClient is planning on setting up a public container repository. At this moment you need to build VC docker images locally."})}),"\n",(0,i.jsxs)(n.p,{children:["VirtualClient keeps the ",(0,i.jsx)(n.code,{children:"DockerFile"})," in ",(0,i.jsx)(n.code,{children:"src\\VirtualClient\\VirtualClient.Packaging\\dockerfiles\\"})," directory. The following is an example command to build a docker image. You need to:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Build VirtualClient using ",(0,i.jsx)(n.code,{children:"build.cmd"})," or ",(0,i.jsx)(n.code,{children:"dotnet build"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Build docker container using ",(0,i.jsx)(n.code,{children:"docker build"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"build.cmd\ndocker build -f src\\VirtualClient\\VirtualClient.Packaging\\dockerfiles\\win-x64.dockerfile -t test-win-x64:1.0.1.3 E:\\Source\\Github\\VirtualClient\n"})}),"\n",(0,i.jsx)(n.p,{children:"The build process could take a couple minutes."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"E:\\Source\\Github\\VirtualClient>docker build -f src\\VirtualClient\\VirtualClient.Packaging\\dockerfiles\\win-x64.dockerfile -t test-win-x64:1.0.1.3 E:\\Source\\Github\\VirtualClient\nSending build context to Docker daemon  2.788GB\nStep 1/3 : ARG REPO=mcr.microsoft.com/windows/nanoserver\nStep 2/3 : FROM ${REPO}:ltsc2022\nltsc2022: Pulling from windows/nanoserver\n38952155e2cd: Pull complete\nDigest: sha256:79fb1372fc5b3aeeca73603d5eadd0a8fb7d4f0b77bd29498696c03bb6de1fdf\nStatus: Downloaded newer image for mcr.microsoft.com/windows/nanoserver:ltsc2022\n ---\x3e 0db1879370e5\nStep 3/3 : COPY out/bin/Release/x64/VirtualClient.Main/net8.0/win-x64/publish/ C:/VirtualClient/\n ---\x3e 7c2fe2466138\nSuccessfully built 7c2fe2466138\nSuccessfully tagged test-win-x64:1.0.1.3\n\nUse 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them\n"})}),"\n",(0,i.jsx)(n.h2,{id:"start-container",children:"Start container"}),"\n",(0,i.jsx)(n.p,{children:"For Windows, the Dockerfile copied VC binaries to C:\\VirtualClient. You can invoke a docker container using the following commands."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:">docker run -d -p 3000:80 test-win-x64:1.0.1.3 C:\\VirtualClient\\VirtualClient.exe --profile=PERF-CPU-OPENSSL.json --packages=https://virtualclient.blob.core.windows.net/packages\nbad3c2a2fe95a3135264dc70ee63f89df7e1deb7875b3a0104b3231e248feaac\n"})}),"\n",(0,i.jsx)(n.h2,{id:"read-console-logs",children:"Read console logs"}),"\n",(0,i.jsx)(n.p,{children:"You can check the container console logs to see if the workloads is running as expected."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:">docker logs bad3c2a2fe95a3135264dc70ee63f89df7e1deb7875b3a0104b3231e248feaac\n[12/22/2022 10:36:14 AM] Profile: Initialize\n[12/22/2022 10:36:14 AM] Profile: Install Dependencies\n[12/22/2022 10:36:14 AM] Profile: Dependency = DependencyPackageInstallation (scenario=InstallOpenSSLWorkloadPackage)\n[12/22/2022 10:36:25 AM] Profile: Execute Monitors\n[12/22/2022 10:36:25 AM] Profile: Monitor = PerfCounterMonitor (scenario=CaptureCounters)\n[12/22/2022 10:36:25 AM] Profile: Execute Actions\n[12/22/2022 10:36:25 AM] Profile: Action = OpenSslExecutor (scenario=MD5)\n[12/22/2022 10:46:25 AM] Profile: Action = OpenSslExecutor (scenario=SHA1)\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Since you can't easily access the VC metric files in containers, it is recommended to setup ",(0,i.jsx)(n.a,{href:"/VirtualClient/docs/guides/0040-telemetry",children:"Telemetry"})," to get automatic data upload."]})}),"\n",(0,i.jsx)(n.h2,{id:"congratulations-",children:"Congratulations !!"}),"\n",(0,i.jsx)(n.p,{children:"You just benchmarked your system's container performance using VC in Docker."})]})}function u(e={}){const{wrapper:n}={...(0,r.ah)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},3905:(e,n,t)=>{t.d(n,{ah:()=>s});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),s=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=s(t),g=r,f=p["".concat(l,".").concat(g)]||p[g]||d[g]||o;return t?i.createElement(f,c(c({ref:n},u),{},{components:t})):i.createElement(f,c({ref:n},u))}));u.displayName="MDXCreateElement"}}]);
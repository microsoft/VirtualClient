{
  "Description": "Redis Benchmark for ABC(Base) with TLS directly installed from apt package manager on Ubuntu22.04 LTS. Version of redis installed will be 6.0.12 or greater",
  "Metadata": {
    "RecommendedMinimumExecutionTime": "02:00:00",
    "SupportedPlatforms": "linux-x64,linux-arm64",
    "SupportedOperatingSystems": "Ubuntu22.04LTS",
    "Notes_ConnectionLimits": "Each Memtier benchmark action will establish (--threads x --clients) connections against the Memcached server for each client instance/process. Ensure that the server-side OS does not place a limit on connections that might exceed this (e.g. ulimit -Sn on Linux)."
  },
  "Parameters": {
    "ServerPort": 6397,
    "ServerThreadCount": 4,
    "ServerInstances": "{LogicalCoreCount}",
    "ClientInstances": 1,
    "Duration": "00:02:00",
    "clients": 2,
    "threads": 2,
    "requests": 50000,
    "pipeline": 2,
    "data-size-pattern": "R",
    "MemtierVersion": "1.4.0",
    "IsTLSEnabled": "yes"
  },
  "Actions": [
    {
      "Type": "RedisServerExecutor",
      "Parameters": {
        "Scenario": "redis_server_tls",
        "PackageName": "redis",
        "CommandLine": "--protected-mode no --io-threads {ServerThreadCount} --maxmemory-policy noeviction --ignore-warnings ARM64-COW-BUG --save &",
        "BindToCores": true,
        "Port": "$.Parameters.ServerPort",
        "IsTLSEnabled": "$.Parameters.IsTLSEnabled",
        "ServerInstances": "$.Parameters.ServerInstances",
        "ServerThreadCount": "$.Parameters.ServerThreadCount",
        "RedisResourcesPackageName": "redisresources",
        "Role": "Server"
      }
    },
    {
      "Type": "MemtierBenchmarkClientExecutor",
      "Parameters": {
        "Scenario": "Medium_A_7GB_Database_Preparation",
        "PackageName": "memtier",
        "CommandLine": "--protocol redis --threads {threads} --clients {clients} --ratio 1:0 --data-size-list 128:15,224:10,757:20,1604:20,2664:20,10761:15 --pipeline {pipeline} --key-minimum 1 --key-maximum 50000 --key-prefix med --key-pattern R:R --run-count 1 --requests={requests} --data-size-pattern {data-size-pattern} --distinct-client-seed",
        "clients": "$.Parameters.clients",
        "threads": "$.Parameters.threads",
        "requests": "$.Parameters.requests",
        "pipeline": "$.Parameters.pipeline",
        "data-size-pattern": "$.Parameters.data-size-pattern",
        "ClientInstances": 1,
        "WarmUp": true,
        "IsTLSEnabled": "$.Parameters.IsTLSEnabled",
        "RedisResourcesPackageName": "redisresources",
        "Role": "Client"
      }
    },
    {
      "Type": "MemtierBenchmarkClientExecutor",
      "Parameters": {
        "Scenario": "LookAside_7GB_Database_Preparation",
        "PackageName": "memtier",
        "CommandLine": "--protocol redis --threads {threads} --clients {clients} --ratio 1:0 --pipeline {pipeline} --key-minimum 1 --key-maximum 5500000 --key-prefix la7 --key-pattern R:R --run-count 1 --requests={requests} --data-size-pattern {data-size-pattern} --data-size-list 100:30,200:40,500:10,1000:10,10000:10 --distinct-client-seed",
        "clients": "$.Parameters.clients",
        "threads": "$.Parameters.threads",
        "requests": "$.Parameters.requests",
        "pipeline": "$.Parameters.pipeline",
        "data-size-pattern": "$.Parameters.data-size-pattern",
        "ClientInstances": 1,
        "WarmUp": true,
        "IsTLSEnabled": "$.Parameters.IsTLSEnabled",
        "RedisResourcesPackageName": "redisresources",
        "Role": "Client"
      }
    },
    {
      "Type": "MemtierBenchmarkClientExecutor",
      "Parameters": {
        "Scenario": "LookAside_1GB_Database_Preparation",
        "PackageName": "memtier",
        "CommandLine": "--protocol redis --threads {threads} --clients {clients} --ratio 1:0 --pipeline {pipeline} --key-minimum 1 --key-maximum 800000 --key-prefix la1 --key-pattern R:R --run-count 1 --requests={requests} --data-size-pattern {data-size-pattern} --data-size-list 100:30,200:40,500:10,1000:10,10000:10 --distinct-client-seed",
        "clients": "$.Parameters.clients",
        "threads": "$.Parameters.threads",
        "requests": "$.Parameters.requests",
        "pipeline": "$.Parameters.pipeline",
        "data-size-pattern": "$.Parameters.data-size-pattern",
        "ClientInstances": 1,
        "WarmUp": true,
        "IsTLSEnabled": "$.Parameters.IsTLSEnabled",
        "RedisResourcesPackageName": "redisresources",
        "Role": "Client"
      }
    },
    {
      "Type": "MemtierBenchmarkClientExecutor",
      "Parameters": {
        "Scenario": "Medium_A_7GB_TLS",
        "PackageName": "memtier",
        "CommandLine": "--protocol redis --threads {threads} --clients {clients} --ratio 3:7 --pipeline {pipeline} --key-minimum 1 --key-maximum 50000 --key-prefix med --key-pattern R:R --run-count 1 --print-percentiles 50,90,95,99,99.9 --random-data  --requests={requests} --data-size-pattern {data-size-pattern} --data-size-list 128:15,224:10,757:20,1604:20,2664:20,10761:15 --distinct-client-seed",
        "clients": "$.Parameters.clients",
        "threads": "$.Parameters.threads",
        "requests": "$.Parameters.requests",
        "pipeline": "$.Parameters.pipeline",
        "data-size-pattern": "$.Parameters.data-size-pattern",
        "ClientInstances": 1,
        "IsTLSEnabled": "$.Parameters.IsTLSEnabled",
        "RedisResourcesPackageName": "redisresources",
        "Role": "Client"
      }
    },
    {
      "Type": "MemtierBenchmarkClientExecutor",
      "Parameters": {
        "Scenario": "LookAside_7GB_TLS",
        "PackageName": "memtier",
        "CommandLine": "--protocol redis --threads {threads} --clients {clients} --ratio 3:7 --pipeline {pipeline} --key-minimum 1 --key-maximum 5500000 --key-prefix la7 --key-pattern R:R --run-count 1 --print-percentiles 50,90,95,99,99.9 --random-data  --requests={requests} --data-size-pattern {data-size-pattern} --data-size-list 100:30,200:40,500:10,1000:10,10000:10 --distinct-client-seed",
        "clients": "$.Parameters.clients",
        "threads": "$.Parameters.threads",
        "requests": "$.Parameters.requests",
        "pipeline": "$.Parameters.pipeline",
        "data-size-pattern": "$.Parameters.data-size-pattern",
        "ClientInstances": 1,
        "IsTLSEnabled": "$.Parameters.IsTLSEnabled",
        "RedisResourcesPackageName": "redisresources",
        "Role": "Client"
      }
    },
    {
      "Type": "MemtierBenchmarkClientExecutor",
      "Parameters": {
        "Scenario": "LookAside_1GB_TLS",
        "PackageName": "memtier",
        "CommandLine": "--protocol redis --threads {threads} --clients {clients} --ratio 3:7 --pipeline {pipeline} --key-minimum 1 --key-maximum 800000 --key-prefix la1 --key-pattern R:R --run-count 1 --print-percentiles 50,90,95,99,99.9 --random-data  --requests={requests} --data-size-pattern {data-size-pattern} --data-size-list 100:30,200:40,500:10,1000:10,10000:10 --distinct-client-seed",
        "clients": "$.Parameters.clients",
        "threads": "$.Parameters.threads",
        "requests": "$.Parameters.requests",
        "pipeline": "$.Parameters.pipeline",
        "data-size-pattern": "$.Parameters.data-size-pattern",
        "ClientInstances": 1,
        "IsTLSEnabled": "$.Parameters.IsTLSEnabled",
        "RedisResourcesPackageName": "redisresources",
        "Role": "Client"
      }
    }
  ],
  "Dependencies": [
    {
      "Type": "LinuxPackageInstallation",
      "Parameters": {
        "Scenario": "InstallLinuxPackages",
        "Packages-Apt": "build-essential,libevent-dev,pkg-config,zlib1g-dev,libssl-dev,autoconf,automake,libpcre3-dev",
        "Packages-Yum": "zlib-devel,pcre-devel,libevent-devel,openssl-devel,git,gcc-c++,make,autoconf,automake",
        "Packages-Dnf": "zlib-devel,pcre-devel,libevent-devel,openssl-devel,git,gcc-c++,make,autoconf,automake"
      }
    },
    {
      "Type": "LinuxPackageInstallation",
      "Parameters": {
        "Scenario": "InstallLinuxPackages",
        "Packages-Apt": "wget,build-essential,tcl-dev,numactl",
        "Packages-Yum": "wget,numactl,tcl-devel",
        "Packages-Dnf": "wget,numactl,tcl-devel"
      }
    },
    {
      "Type": "DependencyPackageInstallation",
      "Parameters": {
        "Scenario": "InstallKeysForRedisTLS",
        "BlobContainer": "packages",
        "BlobName": "redisresources.zip",
        "PackageName": "redisresources",
        "Extract": true
      }
    },
    {
      "Type": "RedisPackageInstallation",
      "Parameters": {
        "Scenario": "InstallRedisPackageFromAptRepository",
        "PackageName": "redis"
      }
    },
    {
      "Type": "ExecuteCommand",
      "Parameters": {
        "Scenario": "CompileMemtier",
        "SupportedPlatforms": "linux-x64,linux-arm64",
        "Command": "pkill redis",
        "WorkingDirectory": "{PackagePath:redis}",
        "Role": "Server"
      }
    },
    {
      "Type": "GitRepoClone",
      "Parameters": {
        "Scenario": "CloneMemtierRepo",
        "RepoUri": "https://github.com/RedisLabs/memtier_benchmark",
        "PackageName": "memtier"
      }
    },
    {
      "Type": "ExecuteCommand",
      "Parameters": {
        "Scenario": "CompileMemtier",
        "SupportedPlatforms": "linux-x64,linux-arm64",
        "Command": "git checkout {MemtierVersion}&&autoreconf -ivf&&bash -c './configure'&&make",
        "WorkingDirectory": "{PackagePath:memtier}",
        "MemtierVersion": "$.Parameters.MemtierVersion"
      }
    },
    {
      "Type": "ApiServer",
      "Parameters": {
        "Scenario": "StartAPIServer"
      }
    }
  ]
}
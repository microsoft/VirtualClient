<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <AssemblyName>VirtualClient.Actions</AssemblyName>
        <NoWarn>SA1508;CA1416;CS4014;CA2213;IL2026</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <!-- Global package dependency versions are defined in the Module.props for the solution. -->
        <PackageReference Include="Extreme.Numerics" Version="$(Extreme_Numerics_PackageVersion)" />
        <PackageReference Include="MathNet.Numerics.Signed" Version="$(MathNet_Numerics_Signed_PackageVersion)" />
        <PackageReference Include="Microsoft.Windows.Compatibility" Version="$(Microsoft_Windows_Compatibility_PackageVersion)" />
        <PackageReference Include="Microsoft.Extensions.Http.Polly" Version="$(Microsoft_Extensions_Http_Polly_PackageVersion)" />
        <PackageReference Include="YamlDotNet" Version="$(YamlDotNet_PackageVersion)" />
    </ItemGroup>
    
    <ItemGroup>
        <ProjectReference Include="..\VirtualClient.Api\VirtualClient.Api.csproj" />
        <ProjectReference Include="..\VirtualClient.Contracts\VirtualClient.Contracts.csproj" />
        <ProjectReference Include="..\VirtualClient.Core\VirtualClient.Core.csproj" />
    </ItemGroup>

    <ItemGroup>
        <!--
        Scripts/content that needs to be copied into the build output 'scripts' directory.
        -->
        <ScriptFiles Include="FIO\*.jobfile" />
        <ScriptFiles Include="SPECcpu\*.cfg;SPECcpu\*.sh;SPECcpu\*.bat" />
        <ScriptFiles Include="Lzbench\*.sh" />
        <ScriptFiles Include="PostgreSQL\*.sh" />
        <ScriptFiles Include="SuperBenchmark\*.yaml;SuperBenchmark\*.sh;SuperBenchmark\*.ini" />
        <ScriptFiles Include="MLPerf\**\*.py" />
	    <ScriptFiles Include="SysbenchOLTP\*.sh" />
    </ItemGroup>

    <Target Name="CopyWorkloadScriptsToOutput" AfterTargets="Build">
        <Message Importance="high" Text="Publish workload scripts/content..." />

        <ItemGroup>
            <Scripts Include="@(ScriptFiles)">
                <ScriptDirLc>$([System.String]::new('%(ScriptFiles.RelativeDir)').ToLower().Split('\\')[0])</ScriptDirLc>
            </Scripts>
        </ItemGroup>

        <Copy SourceFiles="@(Scripts)" DestinationFiles="@(Scripts->'$(RepoPath)\out\scripts\%(ScriptDirLc)\%(RecursiveDir)%(Filename)%(Extension)')" />
    </Target>

    <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), Module.props))\Module.props" />

</Project>
